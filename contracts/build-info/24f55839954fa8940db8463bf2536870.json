{
	"id": "24f55839954fa8940db8463bf2536870",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LoanManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract LoanManager is Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable bhcToken;\r\n    address public immutable vault;\r\n\r\n    struct Loan {\r\n        uint256 id;\r\n        address borrower;\r\n        uint256 amount;\r\n        bool repaid;\r\n    }\r\n\r\n    mapping(uint256 => Loan) public loans;\r\n    uint256 public nextLoanId;\r\n\r\n    event LoanCreated(uint256 id, address borrower, uint256 amount);\r\n    event LoanRepaid(uint256 id, address borrower, uint256 amount);\r\n\r\n    constructor(address tokenAddress, address vaultAddress) Ownable(msg.sender) {\r\n        require(tokenAddress != address(0), \"Invalid token\");\r\n        require(vaultAddress != address(0), \"Invalid vault\");\r\n        bhcToken = IERC20(tokenAddress);\r\n        vault = vaultAddress;\r\n    }\r\n\r\n    function createLoan(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be > 0\");\r\n        loans[nextLoanId] = Loan(nextLoanId, msg.sender, amount, false);\r\n        emit LoanCreated(nextLoanId, msg.sender, amount);\r\n        unchecked { nextLoanId++; }\r\n    }\r\n\r\n    function repayLoan(uint256 loanId, uint256 amount) external {\r\n        Loan storage ln = loans[loanId];\r\n        require(!ln.repaid, \"Already repaid\");\r\n        require(ln.borrower == msg.sender, \"Not borrower\");\r\n        require(amount >= ln.amount, \"Insufficient repay\");\r\n\r\n        bhcToken.safeTransferFrom(msg.sender, vault, amount);\r\n\r\n        ln.repaid = true;\r\n        emit LoanRepaid(loanId, msg.sender, amount);\r\n    }\r\n\r\n    function getLoan(uint256 loanId) external view returns (Loan memory) {\r\n        return loans[loanId];\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c9b71be2c9a68e50c143533787da16582480a05f35bbc8524b330be4246158264736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c9b71be2c9a68e50c143533787da16582480a05f35bbc8524b330be4246158264736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP12 PUSH18 0xBE2C9A68E50C143533787DA16582480A05F3 JUMPDEST 0xBC DUP6 0x24 0xB3 ADDRESS 0xBE TIMESTAMP CHAINID ISZERO DUP3 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c9b71be2c9a68e50c143533787da16582480a05f35bbc8524b330be4246158264736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP12 PUSH18 0xBE2C9A68E50C143533787DA16582480A05F3 JUMPDEST 0xBC DUP6 0x24 0xB3 ADDRESS 0xBE TIMESTAMP CHAINID ISZERO DUP3 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c9b71be2c9a68e50c143533787da16582480a05f35bbc8524b330be4246158264736f6c63430008150033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LoanManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LoanManager.sol": {
				"LoanManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "vaultAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LoanCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "LoanRepaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "bhcToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "createLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								}
							],
							"name": "getLoan",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "borrower",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "repaid",
											"type": "bool"
										}
									],
									"internalType": "struct LoanManager.Loan",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "loans",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "borrower",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "repaid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextLoanId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "loanId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "repayLoan",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LoanManager.sol\":242:1857  contract LoanManager is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/LoanManager.sol\":736:1019  constructor(address tokenAddress, address vaultAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LoanManager.sol\":800:810  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/LoanManager.sol\":855:856  0 */\n  0x00\n    /* \"contracts/LoanManager.sol\":831:857  tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LoanManager.sol\":831:843  tokenAddress */\n  dup3\n    /* \"contracts/LoanManager.sol\":831:857  tokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LoanManager.sol\":823:875  require(tokenAddress != address(0), \"Invalid token\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"contracts/LoanManager.sol\":918:919  0 */\n  0x00\n    /* \"contracts/LoanManager.sol\":894:920  vaultAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LoanManager.sol\":894:906  vaultAddress */\n  dup2\n    /* \"contracts/LoanManager.sol\":894:920  vaultAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LoanManager.sol\":886:938  require(vaultAddress != address(0), \"Invalid vault\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/LoanManager.sol\":967:979  tokenAddress */\n  dup2\n    /* \"contracts/LoanManager.sol\":949:980  bhcToken = IERC20(tokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LoanManager.sol\":999:1011  vaultAddress */\n  dup1\n    /* \"contracts/LoanManager.sol\":991:1011  vault = vaultAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LoanManager.sol\":736:1019  constructor(address tokenAddress, address vaultAddress) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/LoanManager.sol\":242:1857  contract LoanManager is Ownable {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_40\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_42\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_43:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_45\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_48\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":949:1068   */\ntag_47:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_49\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_27\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_50\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_28:\n    /* \"#utility.yul\":1445:1469   */\n  tag_52\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_25\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_54\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1879   */\ntag_29:\n    /* \"#utility.yul\":1794:1805   */\n  0x00\n    /* \"#utility.yul\":1828:1834   */\n  dup3\n    /* \"#utility.yul\":1823:1826   */\n  dup3\n    /* \"#utility.yul\":1816:1835   */\n  mstore\n    /* \"#utility.yul\":1868:1872   */\n  0x20\n    /* \"#utility.yul\":1863:1866   */\n  dup3\n    /* \"#utility.yul\":1859:1873   */\n  add\n    /* \"#utility.yul\":1844:1873   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1885:2048   */\ntag_30:\n    /* \"#utility.yul\":2025:2040   */\n  0x496e76616c696420746f6b656e00000000000000000000000000000000000000\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2013:2019   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  add\n    /* \"#utility.yul\":2002:2041   */\n  mstore\n    /* \"#utility.yul\":1885:2048   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2054:2420   */\ntag_31:\n    /* \"#utility.yul\":2196:2199   */\n  0x00\n    /* \"#utility.yul\":2217:2284   */\n  tag_58\n    /* \"#utility.yul\":2281:2283   */\n  0x0d\n    /* \"#utility.yul\":2276:2279   */\n  dup4\n    /* \"#utility.yul\":2217:2284   */\n  tag_29\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2210:2284   */\n  swap2\n  pop\n    /* \"#utility.yul\":2293:2386   */\n  tag_59\n    /* \"#utility.yul\":2382:2385   */\n  dup3\n    /* \"#utility.yul\":2293:2386   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2411:2413   */\n  0x20\n    /* \"#utility.yul\":2406:2409   */\n  dup3\n    /* \"#utility.yul\":2402:2414   */\n  add\n    /* \"#utility.yul\":2395:2414   */\n  swap1\n  pop\n    /* \"#utility.yul\":2054:2420   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2426:2845   */\ntag_15:\n    /* \"#utility.yul\":2592:2596   */\n  0x00\n    /* \"#utility.yul\":2630:2632   */\n  0x20\n    /* \"#utility.yul\":2619:2628   */\n  dup3\n    /* \"#utility.yul\":2615:2633   */\n  add\n    /* \"#utility.yul\":2607:2633   */\n  swap1\n  pop\n    /* \"#utility.yul\":2679:2688   */\n  dup2\n    /* \"#utility.yul\":2673:2677   */\n  dup2\n    /* \"#utility.yul\":2669:2689   */\n  sub\n    /* \"#utility.yul\":2665:2666   */\n  0x00\n    /* \"#utility.yul\":2654:2663   */\n  dup4\n    /* \"#utility.yul\":2650:2667   */\n  add\n    /* \"#utility.yul\":2643:2690   */\n  mstore\n    /* \"#utility.yul\":2707:2838   */\n  tag_61\n    /* \"#utility.yul\":2833:2837   */\n  dup2\n    /* \"#utility.yul\":2707:2838   */\n  tag_31\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2699:2838   */\n  swap1\n  pop\n    /* \"#utility.yul\":2426:2845   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2851:3014   */\ntag_32:\n    /* \"#utility.yul\":2991:3006   */\n  0x496e76616c6964207661756c7400000000000000000000000000000000000000\n    /* \"#utility.yul\":2987:2988   */\n  0x00\n    /* \"#utility.yul\":2979:2985   */\n  dup3\n    /* \"#utility.yul\":2975:2989   */\n  add\n    /* \"#utility.yul\":2968:3007   */\n  mstore\n    /* \"#utility.yul\":2851:3014   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3020:3386   */\ntag_33:\n    /* \"#utility.yul\":3162:3165   */\n  0x00\n    /* \"#utility.yul\":3183:3250   */\n  tag_64\n    /* \"#utility.yul\":3247:3249   */\n  0x0d\n    /* \"#utility.yul\":3242:3245   */\n  dup4\n    /* \"#utility.yul\":3183:3250   */\n  tag_29\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":3176:3250   */\n  swap2\n  pop\n    /* \"#utility.yul\":3259:3352   */\n  tag_65\n    /* \"#utility.yul\":3348:3351   */\n  dup3\n    /* \"#utility.yul\":3259:3352   */\n  tag_32\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":3377:3379   */\n  0x20\n    /* \"#utility.yul\":3372:3375   */\n  dup3\n    /* \"#utility.yul\":3368:3380   */\n  add\n    /* \"#utility.yul\":3361:3380   */\n  swap1\n  pop\n    /* \"#utility.yul\":3020:3386   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3392:3811   */\ntag_18:\n    /* \"#utility.yul\":3558:3562   */\n  0x00\n    /* \"#utility.yul\":3596:3598   */\n  0x20\n    /* \"#utility.yul\":3585:3594   */\n  dup3\n    /* \"#utility.yul\":3581:3599   */\n  add\n    /* \"#utility.yul\":3573:3599   */\n  swap1\n  pop\n    /* \"#utility.yul\":3645:3654   */\n  dup2\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3635:3655   */\n  sub\n    /* \"#utility.yul\":3631:3632   */\n  0x00\n    /* \"#utility.yul\":3620:3629   */\n  dup4\n    /* \"#utility.yul\":3616:3633   */\n  add\n    /* \"#utility.yul\":3609:3656   */\n  mstore\n    /* \"#utility.yul\":3673:3804   */\n  tag_67\n    /* \"#utility.yul\":3799:3803   */\n  dup2\n    /* \"#utility.yul\":3673:3804   */\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3665:3804   */\n  swap1\n  pop\n    /* \"#utility.yul\":3392:3811   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/LoanManager.sol\":242:1857  contract LoanManager is Ownable {... */\ntag_19:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6d6142e7bc5885f8a3af14e4530d0fef2107c35d29b4827380ff447a51b70068\")\n  0x00\n  assignImmutable(\"0x6012fd21c5b23786b63b1af9ec5ac656f1ee22fef68774e5dea3571e42d00d20\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/LoanManager.sol\":242:1857  contract LoanManager is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9a4e8ecf\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x9a4e8ecf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbe81c529\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe1ec3c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfbfa77cf\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x504006ca\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x87c51459\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8a700b53\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LoanManager.sol\":1746:1854  function getLoan(uint256 loanId) external view returns (Loan memory) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/LoanManager.sol\":561:586  uint256 public nextLoanId */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LoanManager.sol\":1310:1738  function repayLoan(uint256 loanId, uint256 amount) external {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LoanManager.sol\":1027:1302  function createLoan(uint256 amount) external {... */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/LoanManager.sol\":316:348  IERC20 public immutable bhcToken */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LoanManager.sol\":517:554  mapping(uint256 => Loan) public loans */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/LoanManager.sol\":355:385  address public immutable vault */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LoanManager.sol\":1746:1854  function getLoan(uint256 loanId) external view returns (Loan memory) {... */\n    tag_17:\n        /* \"contracts/LoanManager.sol\":1802:1813  Loan memory */\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"contracts/LoanManager.sol\":1833:1838  loans */\n      0x01\n        /* \"contracts/LoanManager.sol\":1833:1846  loans[loanId] */\n      0x00\n        /* \"contracts/LoanManager.sol\":1839:1845  loanId */\n      dup4\n        /* \"contracts/LoanManager.sol\":1833:1846  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LoanManager.sol\":1826:1846  return loans[loanId] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/LoanManager.sol\":1746:1854  function getLoan(uint256 loanId) external view returns (Loan memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LoanManager.sol\":561:586  uint256 public nextLoanId */\n    tag_23:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/LoanManager.sol\":1310:1738  function repayLoan(uint256 loanId, uint256 amount) external {... */\n    tag_29:\n        /* \"contracts/LoanManager.sol\":1381:1396  Loan storage ln */\n      0x00\n        /* \"contracts/LoanManager.sol\":1399:1404  loans */\n      0x01\n        /* \"contracts/LoanManager.sol\":1399:1412  loans[loanId] */\n      0x00\n        /* \"contracts/LoanManager.sol\":1405:1411  loanId */\n      dup5\n        /* \"contracts/LoanManager.sol\":1399:1412  loans[loanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LoanManager.sol\":1381:1412  Loan storage ln = loans[loanId] */\n      swap1\n      pop\n        /* \"contracts/LoanManager.sol\":1432:1434  ln */\n      dup1\n        /* \"contracts/LoanManager.sol\":1432:1441  ln.repaid */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LoanManager.sol\":1431:1441  !ln.repaid */\n      iszero\n        /* \"contracts/LoanManager.sol\":1423:1460  require(!ln.repaid, \"Already repaid\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/LoanManager.sol\":1494:1504  msg.sender */\n      caller\n        /* \"contracts/LoanManager.sol\":1479:1504  ln.borrower == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LoanManager.sol\":1479:1481  ln */\n      dup2\n        /* \"contracts/LoanManager.sol\":1479:1490  ln.borrower */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LoanManager.sol\":1479:1504  ln.borrower == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/LoanManager.sol\":1471:1521  require(ln.borrower == msg.sender, \"Not borrower\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/LoanManager.sol\":1550:1552  ln */\n      dup1\n        /* \"contracts/LoanManager.sol\":1550:1559  ln.amount */\n      0x02\n      add\n      sload\n        /* \"contracts/LoanManager.sol\":1540:1546  amount */\n      dup3\n        /* \"contracts/LoanManager.sol\":1540:1559  amount >= ln.amount */\n      lt\n      iszero\n        /* \"contracts/LoanManager.sol\":1532:1582  require(amount >= ln.amount, \"Insufficient repay\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/LoanManager.sol\":1595:1647  bhcToken.safeTransferFrom(msg.sender, vault, amount) */\n      tag_72\n        /* \"contracts/LoanManager.sol\":1621:1631  msg.sender */\n      caller\n        /* \"contracts/LoanManager.sol\":1633:1638  vault */\n      immutable(\"0x6d6142e7bc5885f8a3af14e4530d0fef2107c35d29b4827380ff447a51b70068\")\n        /* \"contracts/LoanManager.sol\":1640:1646  amount */\n      dup5\n        /* \"contracts/LoanManager.sol\":1595:1603  bhcToken */\n      immutable(\"0x6012fd21c5b23786b63b1af9ec5ac656f1ee22fef68774e5dea3571e42d00d20\")\n        /* \"contracts/LoanManager.sol\":1595:1620  bhcToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_73\n      swap1\n        /* \"contracts/LoanManager.sol\":1595:1647  bhcToken.safeTransferFrom(msg.sender, vault, amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"contracts/LoanManager.sol\":1672:1676  true */\n      0x01\n        /* \"contracts/LoanManager.sol\":1660:1662  ln */\n      dup2\n        /* \"contracts/LoanManager.sol\":1660:1669  ln.repaid */\n      0x03\n      add\n      0x00\n        /* \"contracts/LoanManager.sol\":1660:1676  ln.repaid = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LoanManager.sol\":1692:1730  LoanRepaid(loanId, msg.sender, amount) */\n      0x512d3e65b3e58c2187bb1872aa435dba5bd09c1c03823ba56ab70aac411e4a21\n        /* \"contracts/LoanManager.sol\":1703:1709  loanId */\n      dup4\n        /* \"contracts/LoanManager.sol\":1711:1721  msg.sender */\n      caller\n        /* \"contracts/LoanManager.sol\":1723:1729  amount */\n      dup5\n        /* \"contracts/LoanManager.sol\":1692:1730  LoanRepaid(loanId, msg.sender, amount) */\n      mload(0x40)\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LoanManager.sol\":1370:1738  {... */\n      pop\n        /* \"contracts/LoanManager.sol\":1310:1738  function repayLoan(uint256 loanId, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LoanManager.sol\":1027:1302  function createLoan(uint256 amount) external {... */\n    tag_36:\n        /* \"contracts/LoanManager.sol\":1100:1101  0 */\n      0x00\n        /* \"contracts/LoanManager.sol\":1091:1097  amount */\n      dup2\n        /* \"contracts/LoanManager.sol\":1091:1101  amount > 0 */\n      gt\n        /* \"contracts/LoanManager.sol\":1083:1124  require(amount > 0, \"Amount must be > 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/LoanManager.sol\":1155:1198  Loan(nextLoanId, msg.sender, amount, false) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LoanManager.sol\":1160:1170  nextLoanId */\n      sload(0x02)\n        /* \"contracts/LoanManager.sol\":1155:1198  Loan(nextLoanId, msg.sender, amount, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LoanManager.sol\":1172:1182  msg.sender */\n      caller\n        /* \"contracts/LoanManager.sol\":1155:1198  Loan(nextLoanId, msg.sender, amount, false) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LoanManager.sol\":1184:1190  amount */\n      dup3\n        /* \"contracts/LoanManager.sol\":1155:1198  Loan(nextLoanId, msg.sender, amount, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LoanManager.sol\":1192:1197  false */\n      0x00\n        /* \"contracts/LoanManager.sol\":1155:1198  Loan(nextLoanId, msg.sender, amount, false) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/LoanManager.sol\":1135:1140  loans */\n      0x01\n        /* \"contracts/LoanManager.sol\":1135:1152  loans[nextLoanId] */\n      0x00\n        /* \"contracts/LoanManager.sol\":1141:1151  nextLoanId */\n      sload(0x02)\n        /* \"contracts/LoanManager.sol\":1135:1152  loans[nextLoanId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LoanManager.sol\":1135:1198  loans[nextLoanId] = Loan(nextLoanId, msg.sender, amount, false) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/LoanManager.sol\":1214:1257  LoanCreated(nextLoanId, msg.sender, amount) */\n      0x8910ba13a55695f056e224bbbc6b65d866b12a8c2fbdf387fb853a1cca298cd7\n        /* \"contracts/LoanManager.sol\":1226:1236  nextLoanId */\n      sload(0x02)\n        /* \"contracts/LoanManager.sol\":1238:1248  msg.sender */\n      caller\n        /* \"contracts/LoanManager.sol\":1250:1256  amount */\n      dup4\n        /* \"contracts/LoanManager.sol\":1214:1257  LoanCreated(nextLoanId, msg.sender, amount) */\n      mload(0x40)\n      tag_81\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LoanManager.sol\":1280:1290  nextLoanId */\n      0x02\n      0x00\n        /* \"contracts/LoanManager.sol\":1280:1292  nextLoanId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/LoanManager.sol\":1027:1302  function createLoan(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/LoanManager.sol\":316:348  IERC20 public immutable bhcToken */\n    tag_38:\n      immutable(\"0x6012fd21c5b23786b63b1af9ec5ac656f1ee22fef68774e5dea3571e42d00d20\")\n      dup2\n      jump\t// out\n        /* \"contracts/LoanManager.sol\":517:554  mapping(uint256 => Loan) public loans */\n    tag_43:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LoanManager.sol\":355:385  address public immutable vault */\n    tag_51:\n      immutable(\"0x6d6142e7bc5885f8a3af14e4530d0fef2107c35d29b4827380ff447a51b70068\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_31\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_98\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_105)\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n    tag_54:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_109:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_111:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_112:\n        /* \"#utility.yul\":490:514   */\n      tag_146\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_111\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_147:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_113:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_149\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_112\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_16:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_152\n      tag_109\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":766:885   */\n    tag_151:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_153\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_113\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1133   */\n    tag_114:\n        /* \"#utility.yul\":1102:1126   */\n      tag_155\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1102:1126   */\n      tag_111\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1097:1100   */\n      dup3\n        /* \"#utility.yul\":1090:1127   */\n      mstore\n        /* \"#utility.yul\":1025:1133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1139:1265   */\n    tag_115:\n        /* \"#utility.yul\":1176:1183   */\n      0x00\n        /* \"#utility.yul\":1216:1258   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1209:1214   */\n      dup3\n        /* \"#utility.yul\":1205:1259   */\n      and\n        /* \"#utility.yul\":1194:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1139:1265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1271:1367   */\n    tag_116:\n        /* \"#utility.yul\":1308:1315   */\n      0x00\n        /* \"#utility.yul\":1337:1361   */\n      tag_158\n        /* \"#utility.yul\":1355:1360   */\n      dup3\n        /* \"#utility.yul\":1337:1361   */\n      tag_115\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1326:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1271:1367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1373:1481   */\n    tag_117:\n        /* \"#utility.yul\":1450:1474   */\n      tag_160\n        /* \"#utility.yul\":1468:1473   */\n      dup2\n        /* \"#utility.yul\":1450:1474   */\n      tag_116\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1445:1448   */\n      dup3\n        /* \"#utility.yul\":1438:1475   */\n      mstore\n        /* \"#utility.yul\":1373:1481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1577   */\n    tag_118:\n        /* \"#utility.yul\":1521:1528   */\n      0x00\n        /* \"#utility.yul\":1564:1569   */\n      dup2\n        /* \"#utility.yul\":1557:1570   */\n      iszero\n        /* \"#utility.yul\":1550:1571   */\n      iszero\n        /* \"#utility.yul\":1539:1571   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:1682   */\n    tag_119:\n        /* \"#utility.yul\":1654:1675   */\n      tag_163\n        /* \"#utility.yul\":1669:1674   */\n      dup2\n        /* \"#utility.yul\":1654:1675   */\n      tag_118\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1649:1652   */\n      dup3\n        /* \"#utility.yul\":1642:1676   */\n      mstore\n        /* \"#utility.yul\":1583:1682   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1746:2593   */\n    tag_120:\n        /* \"#utility.yul\":1885:1889   */\n      0x80\n        /* \"#utility.yul\":1880:1883   */\n      dup3\n        /* \"#utility.yul\":1876:1890   */\n      add\n        /* \"#utility.yul\":1970:1974   */\n      0x00\n        /* \"#utility.yul\":1963:1968   */\n      dup3\n        /* \"#utility.yul\":1959:1975   */\n      add\n        /* \"#utility.yul\":1953:1976   */\n      mload\n        /* \"#utility.yul\":1989:2052   */\n      tag_165\n        /* \"#utility.yul\":2046:2050   */\n      0x00\n        /* \"#utility.yul\":2041:2044   */\n      dup6\n        /* \"#utility.yul\":2037:2051   */\n      add\n        /* \"#utility.yul\":2023:2035   */\n      dup3\n        /* \"#utility.yul\":1989:2052   */\n      tag_114\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1900:2062   */\n      pop\n        /* \"#utility.yul\":2148:2152   */\n      0x20\n        /* \"#utility.yul\":2141:2146   */\n      dup3\n        /* \"#utility.yul\":2137:2153   */\n      add\n        /* \"#utility.yul\":2131:2154   */\n      mload\n        /* \"#utility.yul\":2167:2230   */\n      tag_166\n        /* \"#utility.yul\":2224:2228   */\n      0x20\n        /* \"#utility.yul\":2219:2222   */\n      dup6\n        /* \"#utility.yul\":2215:2229   */\n      add\n        /* \"#utility.yul\":2201:2213   */\n      dup3\n        /* \"#utility.yul\":2167:2230   */\n      tag_117\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2072:2240   */\n      pop\n        /* \"#utility.yul\":2324:2328   */\n      0x40\n        /* \"#utility.yul\":2317:2322   */\n      dup3\n        /* \"#utility.yul\":2313:2329   */\n      add\n        /* \"#utility.yul\":2307:2330   */\n      mload\n        /* \"#utility.yul\":2343:2406   */\n      tag_167\n        /* \"#utility.yul\":2400:2404   */\n      0x40\n        /* \"#utility.yul\":2395:2398   */\n      dup6\n        /* \"#utility.yul\":2391:2405   */\n      add\n        /* \"#utility.yul\":2377:2389   */\n      dup3\n        /* \"#utility.yul\":2343:2406   */\n      tag_114\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2250:2416   */\n      pop\n        /* \"#utility.yul\":2500:2504   */\n      0x60\n        /* \"#utility.yul\":2493:2498   */\n      dup3\n        /* \"#utility.yul\":2489:2505   */\n      add\n        /* \"#utility.yul\":2483:2506   */\n      mload\n        /* \"#utility.yul\":2519:2576   */\n      tag_168\n        /* \"#utility.yul\":2570:2574   */\n      0x60\n        /* \"#utility.yul\":2565:2568   */\n      dup6\n        /* \"#utility.yul\":2561:2575   */\n      add\n        /* \"#utility.yul\":2547:2559   */\n      dup3\n        /* \"#utility.yul\":2519:2576   */\n      tag_119\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2426:2586   */\n      pop\n        /* \"#utility.yul\":1854:2593   */\n      pop\n        /* \"#utility.yul\":1746:2593   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2599:2906   */\n    tag_19:\n        /* \"#utility.yul\":2734:2738   */\n      0x00\n        /* \"#utility.yul\":2772:2775   */\n      0x80\n        /* \"#utility.yul\":2761:2770   */\n      dup3\n        /* \"#utility.yul\":2757:2776   */\n      add\n        /* \"#utility.yul\":2749:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2899   */\n      tag_170\n        /* \"#utility.yul\":2896:2897   */\n      0x00\n        /* \"#utility.yul\":2885:2894   */\n      dup4\n        /* \"#utility.yul\":2881:2898   */\n      add\n        /* \"#utility.yul\":2872:2878   */\n      dup5\n        /* \"#utility.yul\":2786:2899   */\n      tag_120\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2599:2906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3030   */\n    tag_121:\n        /* \"#utility.yul\":2999:3023   */\n      tag_172\n        /* \"#utility.yul\":3017:3022   */\n      dup2\n        /* \"#utility.yul\":2999:3023   */\n      tag_111\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2994:2997   */\n      dup3\n        /* \"#utility.yul\":2987:3024   */\n      mstore\n        /* \"#utility.yul\":2912:3030   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3036:3258   */\n    tag_25:\n        /* \"#utility.yul\":3129:3133   */\n      0x00\n        /* \"#utility.yul\":3167:3169   */\n      0x20\n        /* \"#utility.yul\":3156:3165   */\n      dup3\n        /* \"#utility.yul\":3152:3170   */\n      add\n        /* \"#utility.yul\":3144:3170   */\n      swap1\n      pop\n        /* \"#utility.yul\":3180:3251   */\n      tag_174\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3237:3246   */\n      dup4\n        /* \"#utility.yul\":3233:3250   */\n      add\n        /* \"#utility.yul\":3224:3230   */\n      dup5\n        /* \"#utility.yul\":3180:3251   */\n      tag_121\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3036:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3738   */\n    tag_28:\n        /* \"#utility.yul\":3332:3338   */\n      0x00\n        /* \"#utility.yul\":3340:3346   */\n      dup1\n        /* \"#utility.yul\":3389:3391   */\n      0x40\n        /* \"#utility.yul\":3377:3386   */\n      dup4\n        /* \"#utility.yul\":3368:3375   */\n      dup6\n        /* \"#utility.yul\":3364:3387   */\n      sub\n        /* \"#utility.yul\":3360:3392   */\n      slt\n        /* \"#utility.yul\":3357:3476   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":3395:3474   */\n      tag_177\n      tag_109\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3357:3476   */\n    tag_176:\n        /* \"#utility.yul\":3515:3516   */\n      0x00\n        /* \"#utility.yul\":3540:3593   */\n      tag_178\n        /* \"#utility.yul\":3585:3592   */\n      dup6\n        /* \"#utility.yul\":3576:3582   */\n      dup3\n        /* \"#utility.yul\":3565:3574   */\n      dup7\n        /* \"#utility.yul\":3561:3583   */\n      add\n        /* \"#utility.yul\":3540:3593   */\n      tag_113\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3530:3593   */\n      swap3\n      pop\n        /* \"#utility.yul\":3486:3603   */\n      pop\n        /* \"#utility.yul\":3642:3644   */\n      0x20\n        /* \"#utility.yul\":3668:3721   */\n      tag_179\n        /* \"#utility.yul\":3713:3720   */\n      dup6\n        /* \"#utility.yul\":3704:3710   */\n      dup3\n        /* \"#utility.yul\":3693:3702   */\n      dup7\n        /* \"#utility.yul\":3689:3711   */\n      add\n        /* \"#utility.yul\":3668:3721   */\n      tag_113\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3658:3721   */\n      swap2\n      pop\n        /* \"#utility.yul\":3613:3731   */\n      pop\n        /* \"#utility.yul\":3264:3738   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3744:3862   */\n    tag_122:\n        /* \"#utility.yul\":3831:3855   */\n      tag_181\n        /* \"#utility.yul\":3849:3854   */\n      dup2\n        /* \"#utility.yul\":3831:3855   */\n      tag_116\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":3826:3829   */\n      dup3\n        /* \"#utility.yul\":3819:3856   */\n      mstore\n        /* \"#utility.yul\":3744:3862   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3868:4090   */\n    tag_33:\n        /* \"#utility.yul\":3961:3965   */\n      0x00\n        /* \"#utility.yul\":3999:4001   */\n      0x20\n        /* \"#utility.yul\":3988:3997   */\n      dup3\n        /* \"#utility.yul\":3984:4002   */\n      add\n        /* \"#utility.yul\":3976:4002   */\n      swap1\n      pop\n        /* \"#utility.yul\":4012:4083   */\n      tag_183\n        /* \"#utility.yul\":4080:4081   */\n      0x00\n        /* \"#utility.yul\":4069:4078   */\n      dup4\n        /* \"#utility.yul\":4065:4082   */\n      add\n        /* \"#utility.yul\":4056:4062   */\n      dup5\n        /* \"#utility.yul\":4012:4083   */\n      tag_122\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3868:4090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4156   */\n    tag_123:\n        /* \"#utility.yul\":4124:4127   */\n      0x00\n        /* \"#utility.yul\":4145:4150   */\n      dup2\n        /* \"#utility.yul\":4138:4150   */\n      swap1\n      pop\n        /* \"#utility.yul\":4096:4156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4162:4304   */\n    tag_124:\n        /* \"#utility.yul\":4212:4221   */\n      0x00\n        /* \"#utility.yul\":4245:4298   */\n      tag_186\n        /* \"#utility.yul\":4263:4297   */\n      tag_187\n        /* \"#utility.yul\":4272:4296   */\n      tag_188\n        /* \"#utility.yul\":4290:4295   */\n      dup5\n        /* \"#utility.yul\":4272:4296   */\n      tag_115\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4263:4297   */\n      tag_123\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4245:4298   */\n      tag_115\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4232:4298   */\n      swap1\n      pop\n        /* \"#utility.yul\":4162:4304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4310:4436   */\n    tag_125:\n        /* \"#utility.yul\":4360:4369   */\n      0x00\n        /* \"#utility.yul\":4393:4430   */\n      tag_190\n        /* \"#utility.yul\":4424:4429   */\n      dup3\n        /* \"#utility.yul\":4393:4430   */\n      tag_124\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4380:4430   */\n      swap1\n      pop\n        /* \"#utility.yul\":4310:4436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4442:4582   */\n    tag_126:\n        /* \"#utility.yul\":4506:4515   */\n      0x00\n        /* \"#utility.yul\":4539:4576   */\n      tag_192\n        /* \"#utility.yul\":4570:4575   */\n      dup3\n        /* \"#utility.yul\":4539:4576   */\n      tag_125\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4526:4576   */\n      swap1\n      pop\n        /* \"#utility.yul\":4442:4582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4588:4747   */\n    tag_127:\n        /* \"#utility.yul\":4689:4740   */\n      tag_194\n        /* \"#utility.yul\":4734:4739   */\n      dup2\n        /* \"#utility.yul\":4689:4740   */\n      tag_126\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4684:4687   */\n      dup3\n        /* \"#utility.yul\":4677:4741   */\n      mstore\n        /* \"#utility.yul\":4588:4747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4753:5003   */\n    tag_40:\n        /* \"#utility.yul\":4860:4864   */\n      0x00\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"#utility.yul\":4887:4896   */\n      dup3\n        /* \"#utility.yul\":4883:4901   */\n      add\n        /* \"#utility.yul\":4875:4901   */\n      swap1\n      pop\n        /* \"#utility.yul\":4911:4996   */\n      tag_196\n        /* \"#utility.yul\":4993:4994   */\n      0x00\n        /* \"#utility.yul\":4982:4991   */\n      dup4\n        /* \"#utility.yul\":4978:4995   */\n      add\n        /* \"#utility.yul\":4969:4975   */\n      dup5\n        /* \"#utility.yul\":4911:4996   */\n      tag_127\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4753:5003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5009:5118   */\n    tag_128:\n        /* \"#utility.yul\":5090:5111   */\n      tag_198\n        /* \"#utility.yul\":5105:5110   */\n      dup2\n        /* \"#utility.yul\":5090:5111   */\n      tag_118\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5085:5088   */\n      dup3\n        /* \"#utility.yul\":5078:5112   */\n      mstore\n        /* \"#utility.yul\":5009:5118   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5124:5665   */\n    tag_45:\n        /* \"#utility.yul\":5295:5299   */\n      0x00\n        /* \"#utility.yul\":5333:5336   */\n      0x80\n        /* \"#utility.yul\":5322:5331   */\n      dup3\n        /* \"#utility.yul\":5318:5337   */\n      add\n        /* \"#utility.yul\":5310:5337   */\n      swap1\n      pop\n        /* \"#utility.yul\":5347:5418   */\n      tag_200\n        /* \"#utility.yul\":5415:5416   */\n      0x00\n        /* \"#utility.yul\":5404:5413   */\n      dup4\n        /* \"#utility.yul\":5400:5417   */\n      add\n        /* \"#utility.yul\":5391:5397   */\n      dup8\n        /* \"#utility.yul\":5347:5418   */\n      tag_121\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5428:5500   */\n      tag_201\n        /* \"#utility.yul\":5496:5498   */\n      0x20\n        /* \"#utility.yul\":5485:5494   */\n      dup4\n        /* \"#utility.yul\":5481:5499   */\n      add\n        /* \"#utility.yul\":5472:5478   */\n      dup7\n        /* \"#utility.yul\":5428:5500   */\n      tag_122\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":5510:5582   */\n      tag_202\n        /* \"#utility.yul\":5578:5580   */\n      0x40\n        /* \"#utility.yul\":5567:5576   */\n      dup4\n        /* \"#utility.yul\":5563:5581   */\n      add\n        /* \"#utility.yul\":5554:5560   */\n      dup6\n        /* \"#utility.yul\":5510:5582   */\n      tag_121\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":5592:5658   */\n      tag_203\n        /* \"#utility.yul\":5654:5656   */\n      0x60\n        /* \"#utility.yul\":5643:5652   */\n      dup4\n        /* \"#utility.yul\":5639:5657   */\n      add\n        /* \"#utility.yul\":5630:5636   */\n      dup5\n        /* \"#utility.yul\":5592:5658   */\n      tag_128\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5124:5665   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5793   */\n    tag_129:\n        /* \"#utility.yul\":5744:5768   */\n      tag_205\n        /* \"#utility.yul\":5762:5767   */\n      dup2\n        /* \"#utility.yul\":5744:5768   */\n      tag_116\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":5737:5742   */\n      dup2\n        /* \"#utility.yul\":5734:5769   */\n      eq\n        /* \"#utility.yul\":5724:5787   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":5783:5784   */\n      0x00\n        /* \"#utility.yul\":5780:5781   */\n      dup1\n        /* \"#utility.yul\":5773:5785   */\n      revert\n        /* \"#utility.yul\":5724:5787   */\n    tag_206:\n        /* \"#utility.yul\":5671:5793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5799:5938   */\n    tag_130:\n        /* \"#utility.yul\":5845:5850   */\n      0x00\n        /* \"#utility.yul\":5883:5889   */\n      dup2\n        /* \"#utility.yul\":5870:5890   */\n      calldataload\n        /* \"#utility.yul\":5861:5890   */\n      swap1\n      pop\n        /* \"#utility.yul\":5899:5932   */\n      tag_208\n        /* \"#utility.yul\":5926:5931   */\n      dup2\n        /* \"#utility.yul\":5899:5932   */\n      tag_129\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5799:5938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5944:6273   */\n    tag_48:\n        /* \"#utility.yul\":6003:6009   */\n      0x00\n        /* \"#utility.yul\":6052:6054   */\n      0x20\n        /* \"#utility.yul\":6040:6049   */\n      dup3\n        /* \"#utility.yul\":6031:6038   */\n      dup5\n        /* \"#utility.yul\":6027:6050   */\n      sub\n        /* \"#utility.yul\":6023:6055   */\n      slt\n        /* \"#utility.yul\":6020:6139   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":6058:6137   */\n      tag_211\n      tag_109\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6020:6139   */\n    tag_210:\n        /* \"#utility.yul\":6178:6179   */\n      0x00\n        /* \"#utility.yul\":6203:6256   */\n      tag_212\n        /* \"#utility.yul\":6248:6255   */\n      dup5\n        /* \"#utility.yul\":6239:6245   */\n      dup3\n        /* \"#utility.yul\":6228:6237   */\n      dup6\n        /* \"#utility.yul\":6224:6246   */\n      add\n        /* \"#utility.yul\":6203:6256   */\n      tag_130\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6193:6256   */\n      swap2\n      pop\n        /* \"#utility.yul\":6149:6266   */\n      pop\n        /* \"#utility.yul\":5944:6273   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6279:6448   */\n    tag_131:\n        /* \"#utility.yul\":6363:6374   */\n      0x00\n        /* \"#utility.yul\":6397:6403   */\n      dup3\n        /* \"#utility.yul\":6392:6395   */\n      dup3\n        /* \"#utility.yul\":6385:6404   */\n      mstore\n        /* \"#utility.yul\":6437:6441   */\n      0x20\n        /* \"#utility.yul\":6432:6435   */\n      dup3\n        /* \"#utility.yul\":6428:6442   */\n      add\n        /* \"#utility.yul\":6413:6442   */\n      swap1\n      pop\n        /* \"#utility.yul\":6279:6448   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6454:6618   */\n    tag_132:\n        /* \"#utility.yul\":6594:6610   */\n      0x416c726561647920726570616964000000000000000000000000000000000000\n        /* \"#utility.yul\":6590:6591   */\n      0x00\n        /* \"#utility.yul\":6582:6588   */\n      dup3\n        /* \"#utility.yul\":6578:6592   */\n      add\n        /* \"#utility.yul\":6571:6611   */\n      mstore\n        /* \"#utility.yul\":6454:6618   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:6990   */\n    tag_133:\n        /* \"#utility.yul\":6766:6769   */\n      0x00\n        /* \"#utility.yul\":6787:6854   */\n      tag_216\n        /* \"#utility.yul\":6851:6853   */\n      0x0e\n        /* \"#utility.yul\":6846:6849   */\n      dup4\n        /* \"#utility.yul\":6787:6854   */\n      tag_131\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":6780:6854   */\n      swap2\n      pop\n        /* \"#utility.yul\":6863:6956   */\n      tag_217\n        /* \"#utility.yul\":6952:6955   */\n      dup3\n        /* \"#utility.yul\":6863:6956   */\n      tag_132\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":6981:6983   */\n      0x20\n        /* \"#utility.yul\":6976:6979   */\n      dup3\n        /* \"#utility.yul\":6972:6984   */\n      add\n        /* \"#utility.yul\":6965:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":6624:6990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6996:7415   */\n    tag_65:\n        /* \"#utility.yul\":7162:7166   */\n      0x00\n        /* \"#utility.yul\":7200:7202   */\n      0x20\n        /* \"#utility.yul\":7189:7198   */\n      dup3\n        /* \"#utility.yul\":7185:7203   */\n      add\n        /* \"#utility.yul\":7177:7203   */\n      swap1\n      pop\n        /* \"#utility.yul\":7249:7258   */\n      dup2\n        /* \"#utility.yul\":7243:7247   */\n      dup2\n        /* \"#utility.yul\":7239:7259   */\n      sub\n        /* \"#utility.yul\":7235:7236   */\n      0x00\n        /* \"#utility.yul\":7224:7233   */\n      dup4\n        /* \"#utility.yul\":7220:7237   */\n      add\n        /* \"#utility.yul\":7213:7260   */\n      mstore\n        /* \"#utility.yul\":7277:7408   */\n      tag_219\n        /* \"#utility.yul\":7403:7407   */\n      dup2\n        /* \"#utility.yul\":7277:7408   */\n      tag_133\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7269:7408   */\n      swap1\n      pop\n        /* \"#utility.yul\":6996:7415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7421:7583   */\n    tag_134:\n        /* \"#utility.yul\":7561:7575   */\n      0x4e6f7420626f72726f7765720000000000000000000000000000000000000000\n        /* \"#utility.yul\":7557:7558   */\n      0x00\n        /* \"#utility.yul\":7549:7555   */\n      dup3\n        /* \"#utility.yul\":7545:7559   */\n      add\n        /* \"#utility.yul\":7538:7576   */\n      mstore\n        /* \"#utility.yul\":7421:7583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7589:7955   */\n    tag_135:\n        /* \"#utility.yul\":7731:7734   */\n      0x00\n        /* \"#utility.yul\":7752:7819   */\n      tag_222\n        /* \"#utility.yul\":7816:7818   */\n      0x0c\n        /* \"#utility.yul\":7811:7814   */\n      dup4\n        /* \"#utility.yul\":7752:7819   */\n      tag_131\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":7745:7819   */\n      swap2\n      pop\n        /* \"#utility.yul\":7828:7921   */\n      tag_223\n        /* \"#utility.yul\":7917:7920   */\n      dup3\n        /* \"#utility.yul\":7828:7921   */\n      tag_134\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7946:7948   */\n      0x20\n        /* \"#utility.yul\":7941:7944   */\n      dup3\n        /* \"#utility.yul\":7937:7949   */\n      add\n        /* \"#utility.yul\":7930:7949   */\n      swap1\n      pop\n        /* \"#utility.yul\":7589:7955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8380   */\n    tag_68:\n        /* \"#utility.yul\":8127:8131   */\n      0x00\n        /* \"#utility.yul\":8165:8167   */\n      0x20\n        /* \"#utility.yul\":8154:8163   */\n      dup3\n        /* \"#utility.yul\":8150:8168   */\n      add\n        /* \"#utility.yul\":8142:8168   */\n      swap1\n      pop\n        /* \"#utility.yul\":8214:8223   */\n      dup2\n        /* \"#utility.yul\":8208:8212   */\n      dup2\n        /* \"#utility.yul\":8204:8224   */\n      sub\n        /* \"#utility.yul\":8200:8201   */\n      0x00\n        /* \"#utility.yul\":8189:8198   */\n      dup4\n        /* \"#utility.yul\":8185:8202   */\n      add\n        /* \"#utility.yul\":8178:8225   */\n      mstore\n        /* \"#utility.yul\":8242:8373   */\n      tag_225\n        /* \"#utility.yul\":8368:8372   */\n      dup2\n        /* \"#utility.yul\":8242:8373   */\n      tag_135\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8234:8373   */\n      swap1\n      pop\n        /* \"#utility.yul\":7961:8380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8386:8554   */\n    tag_136:\n        /* \"#utility.yul\":8526:8546   */\n      0x496e73756666696369656e742072657061790000000000000000000000000000\n        /* \"#utility.yul\":8522:8523   */\n      0x00\n        /* \"#utility.yul\":8514:8520   */\n      dup3\n        /* \"#utility.yul\":8510:8524   */\n      add\n        /* \"#utility.yul\":8503:8547   */\n      mstore\n        /* \"#utility.yul\":8386:8554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8560:8926   */\n    tag_137:\n        /* \"#utility.yul\":8702:8705   */\n      0x00\n        /* \"#utility.yul\":8723:8790   */\n      tag_228\n        /* \"#utility.yul\":8787:8789   */\n      0x12\n        /* \"#utility.yul\":8782:8785   */\n      dup4\n        /* \"#utility.yul\":8723:8790   */\n      tag_131\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8716:8790   */\n      swap2\n      pop\n        /* \"#utility.yul\":8799:8892   */\n      tag_229\n        /* \"#utility.yul\":8888:8891   */\n      dup3\n        /* \"#utility.yul\":8799:8892   */\n      tag_136\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":8917:8919   */\n      0x20\n        /* \"#utility.yul\":8912:8915   */\n      dup3\n        /* \"#utility.yul\":8908:8920   */\n      add\n        /* \"#utility.yul\":8901:8920   */\n      swap1\n      pop\n        /* \"#utility.yul\":8560:8926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8932:9351   */\n    tag_71:\n        /* \"#utility.yul\":9098:9102   */\n      0x00\n        /* \"#utility.yul\":9136:9138   */\n      0x20\n        /* \"#utility.yul\":9125:9134   */\n      dup3\n        /* \"#utility.yul\":9121:9139   */\n      add\n        /* \"#utility.yul\":9113:9139   */\n      swap1\n      pop\n        /* \"#utility.yul\":9185:9194   */\n      dup2\n        /* \"#utility.yul\":9179:9183   */\n      dup2\n        /* \"#utility.yul\":9175:9195   */\n      sub\n        /* \"#utility.yul\":9171:9172   */\n      0x00\n        /* \"#utility.yul\":9160:9169   */\n      dup4\n        /* \"#utility.yul\":9156:9173   */\n      add\n        /* \"#utility.yul\":9149:9196   */\n      mstore\n        /* \"#utility.yul\":9213:9344   */\n      tag_231\n        /* \"#utility.yul\":9339:9343   */\n      dup2\n        /* \"#utility.yul\":9213:9344   */\n      tag_137\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9205:9344   */\n      swap1\n      pop\n        /* \"#utility.yul\":8932:9351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9799   */\n    tag_75:\n        /* \"#utility.yul\":9506:9510   */\n      0x00\n        /* \"#utility.yul\":9544:9546   */\n      0x60\n        /* \"#utility.yul\":9533:9542   */\n      dup3\n        /* \"#utility.yul\":9529:9547   */\n      add\n        /* \"#utility.yul\":9521:9547   */\n      swap1\n      pop\n        /* \"#utility.yul\":9557:9628   */\n      tag_233\n        /* \"#utility.yul\":9625:9626   */\n      0x00\n        /* \"#utility.yul\":9614:9623   */\n      dup4\n        /* \"#utility.yul\":9610:9627   */\n      add\n        /* \"#utility.yul\":9601:9607   */\n      dup7\n        /* \"#utility.yul\":9557:9628   */\n      tag_121\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9638:9710   */\n      tag_234\n        /* \"#utility.yul\":9706:9708   */\n      0x20\n        /* \"#utility.yul\":9695:9704   */\n      dup4\n        /* \"#utility.yul\":9691:9709   */\n      add\n        /* \"#utility.yul\":9682:9688   */\n      dup6\n        /* \"#utility.yul\":9638:9710   */\n      tag_122\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":9720:9792   */\n      tag_235\n        /* \"#utility.yul\":9788:9790   */\n      0x40\n        /* \"#utility.yul\":9777:9786   */\n      dup4\n        /* \"#utility.yul\":9773:9791   */\n      add\n        /* \"#utility.yul\":9764:9770   */\n      dup5\n        /* \"#utility.yul\":9720:9792   */\n      tag_121\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9357:9799   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:9973   */\n    tag_138:\n        /* \"#utility.yul\":9945:9965   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":9941:9942   */\n      0x00\n        /* \"#utility.yul\":9933:9939   */\n      dup3\n        /* \"#utility.yul\":9929:9943   */\n      add\n        /* \"#utility.yul\":9922:9966   */\n      mstore\n        /* \"#utility.yul\":9805:9973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10345   */\n    tag_139:\n        /* \"#utility.yul\":10121:10124   */\n      0x00\n        /* \"#utility.yul\":10142:10209   */\n      tag_238\n        /* \"#utility.yul\":10206:10208   */\n      0x12\n        /* \"#utility.yul\":10201:10204   */\n      dup4\n        /* \"#utility.yul\":10142:10209   */\n      tag_131\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":10135:10209   */\n      swap2\n      pop\n        /* \"#utility.yul\":10218:10311   */\n      tag_239\n        /* \"#utility.yul\":10307:10310   */\n      dup3\n        /* \"#utility.yul\":10218:10311   */\n      tag_138\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":10336:10338   */\n      0x20\n        /* \"#utility.yul\":10331:10334   */\n      dup3\n        /* \"#utility.yul\":10327:10339   */\n      add\n        /* \"#utility.yul\":10320:10339   */\n      swap1\n      pop\n        /* \"#utility.yul\":9979:10345   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10351:10770   */\n    tag_80:\n        /* \"#utility.yul\":10517:10521   */\n      0x00\n        /* \"#utility.yul\":10555:10557   */\n      0x20\n        /* \"#utility.yul\":10544:10553   */\n      dup3\n        /* \"#utility.yul\":10540:10558   */\n      add\n        /* \"#utility.yul\":10532:10558   */\n      swap1\n      pop\n        /* \"#utility.yul\":10604:10613   */\n      dup2\n        /* \"#utility.yul\":10598:10602   */\n      dup2\n        /* \"#utility.yul\":10594:10614   */\n      sub\n        /* \"#utility.yul\":10590:10591   */\n      0x00\n        /* \"#utility.yul\":10579:10588   */\n      dup4\n        /* \"#utility.yul\":10575:10592   */\n      add\n        /* \"#utility.yul\":10568:10615   */\n      mstore\n        /* \"#utility.yul\":10632:10763   */\n      tag_241\n        /* \"#utility.yul\":10758:10762   */\n      dup2\n        /* \"#utility.yul\":10632:10763   */\n      tag_139\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10624:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10351:10770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10776:11218   */\n    tag_99:\n        /* \"#utility.yul\":10925:10929   */\n      0x00\n        /* \"#utility.yul\":10963:10965   */\n      0x60\n        /* \"#utility.yul\":10952:10961   */\n      dup3\n        /* \"#utility.yul\":10948:10966   */\n      add\n        /* \"#utility.yul\":10940:10966   */\n      swap1\n      pop\n        /* \"#utility.yul\":10976:11047   */\n      tag_243\n        /* \"#utility.yul\":11044:11045   */\n      0x00\n        /* \"#utility.yul\":11033:11042   */\n      dup4\n        /* \"#utility.yul\":11029:11046   */\n      add\n        /* \"#utility.yul\":11020:11026   */\n      dup7\n        /* \"#utility.yul\":10976:11047   */\n      tag_122\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":11057:11129   */\n      tag_244\n        /* \"#utility.yul\":11125:11127   */\n      0x20\n        /* \"#utility.yul\":11114:11123   */\n      dup4\n        /* \"#utility.yul\":11110:11128   */\n      add\n        /* \"#utility.yul\":11101:11107   */\n      dup6\n        /* \"#utility.yul\":11057:11129   */\n      tag_122\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":11139:11211   */\n      tag_245\n        /* \"#utility.yul\":11207:11209   */\n      0x40\n        /* \"#utility.yul\":11196:11205   */\n      dup4\n        /* \"#utility.yul\":11192:11210   */\n      add\n        /* \"#utility.yul\":11183:11189   */\n      dup5\n        /* \"#utility.yul\":11139:11211   */\n      tag_121\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":10776:11218   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122042d4019879604e96ee93b83155f1673f35554b295a97525d9bb273213043c6b064736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 526,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6": {
									"entryPoint": 949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3814:9",
										"nodeType": "YulBlock",
										"src": "0:3814:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "939:413:9",
													"nodeType": "YulBlock",
													"src": "939:413:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:9",
																"nodeType": "YulBlock",
																"src": "985:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:9"
																			},
																			"nativeSrc": "987:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:9"
																		},
																		"nativeSrc": "987:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:9"
																		},
																		"nativeSrc": "956:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "981:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:9"
																},
																"nativeSrc": "952:32:9",
																"nodeType": "YulFunctionCall",
																"src": "952:32:9"
															},
															"nativeSrc": "949:119:9",
															"nodeType": "YulIf",
															"src": "949:119:9"
														},
														{
															"nativeSrc": "1078:128:9",
															"nodeType": "YulBlock",
															"src": "1078:128:9",
															"statements": [
																{
																	"nativeSrc": "1093:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:9"
																				},
																				"nativeSrc": "1164:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:9"
																		},
																		"nativeSrc": "1132:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:9",
															"nodeType": "YulBlock",
															"src": "1216:129:9",
															"statements": [
																{
																	"nativeSrc": "1231:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:9"
																				},
																				"nativeSrc": "1303:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:9"
																		},
																		"nativeSrc": "1271:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:9",
														"nodeType": "YulTypedName",
														"src": "901:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:9",
														"nodeType": "YulTypedName",
														"src": "912:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:9",
														"nodeType": "YulTypedName",
														"src": "924:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:9",
														"nodeType": "YulTypedName",
														"src": "932:6:9",
														"type": ""
													}
												],
												"src": "845:507:9"
											},
											{
												"body": {
													"nativeSrc": "1423:53:9",
													"nodeType": "YulBlock",
													"src": "1423:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:9"
																		},
																		"nativeSrc": "1445:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:9"
																},
																"nativeSrc": "1433:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:9"
															},
															"nativeSrc": "1433:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:9",
														"nodeType": "YulTypedName",
														"src": "1411:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:9",
														"nodeType": "YulTypedName",
														"src": "1418:3:9",
														"type": ""
													}
												],
												"src": "1358:118:9"
											},
											{
												"body": {
													"nativeSrc": "1580:124:9",
													"nodeType": "YulBlock",
													"src": "1580:124:9",
													"statements": [
														{
															"nativeSrc": "1590:26:9",
															"nodeType": "YulAssignment",
															"src": "1590:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:9"
																},
																"nativeSrc": "1598:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:9"
																		},
																		"nativeSrc": "1679:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:9"
																},
																"nativeSrc": "1626:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:9"
															},
															"nativeSrc": "1626:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:9",
														"nodeType": "YulTypedName",
														"src": "1552:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:9",
														"nodeType": "YulTypedName",
														"src": "1564:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:9",
														"nodeType": "YulTypedName",
														"src": "1575:4:9",
														"type": ""
													}
												],
												"src": "1482:222:9"
											},
											{
												"body": {
													"nativeSrc": "1806:73:9",
													"nodeType": "YulBlock",
													"src": "1806:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1823:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1823:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1828:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1816:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:9"
																},
																"nativeSrc": "1816:19:9",
																"nodeType": "YulFunctionCall",
																"src": "1816:19:9"
															},
															"nativeSrc": "1816:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "1816:19:9"
														},
														{
															"nativeSrc": "1844:29:9",
															"nodeType": "YulAssignment",
															"src": "1844:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1863:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1863:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1868:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1859:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:9"
																},
																"nativeSrc": "1859:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1844:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "1844:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1710:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1778:3:9",
														"nodeType": "YulTypedName",
														"src": "1778:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1783:6:9",
														"nodeType": "YulTypedName",
														"src": "1783:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1794:11:9",
														"nodeType": "YulTypedName",
														"src": "1794:11:9",
														"type": ""
													}
												],
												"src": "1710:169:9"
											},
											{
												"body": {
													"nativeSrc": "1991:57:9",
													"nodeType": "YulBlock",
													"src": "1991:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2013:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2021:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:9"
																		},
																		"nativeSrc": "2009:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "2025:15:9",
																		"nodeType": "YulLiteral",
																		"src": "2025:15:9",
																		"type": "",
																		"value": "Invalid token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2002:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:9"
																},
																"nativeSrc": "2002:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:39:9"
															},
															"nativeSrc": "2002:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "2002:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
												"nativeSrc": "1885:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1983:6:9",
														"nodeType": "YulTypedName",
														"src": "1983:6:9",
														"type": ""
													}
												],
												"src": "1885:163:9"
											},
											{
												"body": {
													"nativeSrc": "2200:220:9",
													"nodeType": "YulBlock",
													"src": "2200:220:9",
													"statements": [
														{
															"nativeSrc": "2210:74:9",
															"nodeType": "YulAssignment",
															"src": "2210:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2276:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2276:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2281:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2281:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2217:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2217:58:9"
																},
																"nativeSrc": "2217:67:9",
																"nodeType": "YulFunctionCall",
																"src": "2217:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2210:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2382:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2382:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																	"nativeSrc": "2293:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "2293:88:9"
																},
																"nativeSrc": "2293:93:9",
																"nodeType": "YulFunctionCall",
																"src": "2293:93:9"
															},
															"nativeSrc": "2293:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "2293:93:9"
														},
														{
															"nativeSrc": "2395:19:9",
															"nodeType": "YulAssignment",
															"src": "2395:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2406:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2406:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2411:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2411:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2402:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2402:3:9"
																},
																"nativeSrc": "2402:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2402:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2395:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2054:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2188:3:9",
														"nodeType": "YulTypedName",
														"src": "2188:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2196:3:9",
														"nodeType": "YulTypedName",
														"src": "2196:3:9",
														"type": ""
													}
												],
												"src": "2054:366:9"
											},
											{
												"body": {
													"nativeSrc": "2597:248:9",
													"nodeType": "YulBlock",
													"src": "2597:248:9",
													"statements": [
														{
															"nativeSrc": "2607:26:9",
															"nodeType": "YulAssignment",
															"src": "2607:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2619:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2619:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2630:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2630:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2615:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2615:3:9"
																},
																"nativeSrc": "2615:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2615:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2607:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2607:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2665:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2665:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2650:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2650:3:9"
																		},
																		"nativeSrc": "2650:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2650:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2673:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2673:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2679:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2679:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2669:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2669:3:9"
																		},
																		"nativeSrc": "2669:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2669:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2643:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2643:6:9"
																},
																"nativeSrc": "2643:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2643:47:9"
															},
															"nativeSrc": "2643:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2643:47:9"
														},
														{
															"nativeSrc": "2699:139:9",
															"nodeType": "YulAssignment",
															"src": "2699:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2833:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2833:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2707:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "2707:124:9"
																},
																"nativeSrc": "2707:131:9",
																"nodeType": "YulFunctionCall",
																"src": "2707:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2699:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2699:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2426:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2577:9:9",
														"nodeType": "YulTypedName",
														"src": "2577:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2592:4:9",
														"nodeType": "YulTypedName",
														"src": "2592:4:9",
														"type": ""
													}
												],
												"src": "2426:419:9"
											},
											{
												"body": {
													"nativeSrc": "2957:57:9",
													"nodeType": "YulBlock",
													"src": "2957:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2979:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2979:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2987:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2987:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2975:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:9"
																		},
																		"nativeSrc": "2975:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:14:9"
																	},
																	{
																		"hexValue": "496e76616c6964207661756c74",
																		"kind": "string",
																		"nativeSrc": "2991:15:9",
																		"nodeType": "YulLiteral",
																		"src": "2991:15:9",
																		"type": "",
																		"value": "Invalid vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2968:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:9"
																},
																"nativeSrc": "2968:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2968:39:9"
															},
															"nativeSrc": "2968:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "2968:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6",
												"nativeSrc": "2851:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2949:6:9",
														"nodeType": "YulTypedName",
														"src": "2949:6:9",
														"type": ""
													}
												],
												"src": "2851:163:9"
											},
											{
												"body": {
													"nativeSrc": "3166:220:9",
													"nodeType": "YulBlock",
													"src": "3166:220:9",
													"statements": [
														{
															"nativeSrc": "3176:74:9",
															"nodeType": "YulAssignment",
															"src": "3176:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3242:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3242:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3247:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3183:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3183:58:9"
																},
																"nativeSrc": "3183:67:9",
																"nodeType": "YulFunctionCall",
																"src": "3183:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3176:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3348:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3348:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6",
																	"nativeSrc": "3259:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "3259:88:9"
																},
																"nativeSrc": "3259:93:9",
																"nodeType": "YulFunctionCall",
																"src": "3259:93:9"
															},
															"nativeSrc": "3259:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "3259:93:9"
														},
														{
															"nativeSrc": "3361:19:9",
															"nodeType": "YulAssignment",
															"src": "3361:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3372:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3372:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3377:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3377:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3368:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3368:3:9"
																},
																"nativeSrc": "3368:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3368:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3361:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3361:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3020:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3154:3:9",
														"nodeType": "YulTypedName",
														"src": "3154:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3162:3:9",
														"nodeType": "YulTypedName",
														"src": "3162:3:9",
														"type": ""
													}
												],
												"src": "3020:366:9"
											},
											{
												"body": {
													"nativeSrc": "3563:248:9",
													"nodeType": "YulBlock",
													"src": "3563:248:9",
													"statements": [
														{
															"nativeSrc": "3573:26:9",
															"nodeType": "YulAssignment",
															"src": "3573:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3585:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3585:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3596:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3596:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3581:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3581:3:9"
																},
																"nativeSrc": "3581:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3581:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3573:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3573:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3620:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3620:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3631:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3631:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:9"
																		},
																		"nativeSrc": "3616:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3639:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3639:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3645:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3645:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3635:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:9"
																		},
																		"nativeSrc": "3635:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3635:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:9"
																},
																"nativeSrc": "3609:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3609:47:9"
															},
															"nativeSrc": "3609:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3609:47:9"
														},
														{
															"nativeSrc": "3665:139:9",
															"nodeType": "YulAssignment",
															"src": "3665:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3799:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3799:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3673:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3673:124:9"
																},
																"nativeSrc": "3673:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3673:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3665:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3665:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3392:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3543:9:9",
														"nodeType": "YulTypedName",
														"src": "3543:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3558:4:9",
														"nodeType": "YulTypedName",
														"src": "3558:4:9",
														"type": ""
													}
												],
												"src": "3392:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid vault\")\n\n    }\n\n    function abi_encode_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801562000010575f80fd5b50604051620013e2380380620013e2833981810160405281019062000036919062000334565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a191906200038a565b60405180910390fd5b620000bb816200020e60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200012d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001249062000403565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200019e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001959062000471565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000491565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002fe82620002d3565b9050919050565b6200031081620002f2565b81146200031b575f80fd5b50565b5f815190506200032e8162000305565b92915050565b5f80604083850312156200034d576200034c620002cf565b5b5f6200035c858286016200031e565b92505060206200036f858286016200031e565b9150509250929050565b6200038481620002f2565b82525050565b5f6020820190506200039f5f83018462000379565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e000000000000000000000000000000000000005f82015250565b5f620003eb600d83620003a5565b9150620003f882620003b5565b602082019050919050565b5f6020820190508181035f8301526200041c81620003dd565b9050919050565b7f496e76616c6964207661756c74000000000000000000000000000000000000005f82015250565b5f62000459600d83620003a5565b9150620004668262000423565b602082019050919050565b5f6020820190508181035f8301526200048a816200044b565b9050919050565b60805160a051610f21620004c15f395f81816103e2015261072801525f818161040401526106290152610f215ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c80639a4e8ecf116100645780639a4e8ecf14610132578063be81c5291461014e578063e1ec3c681461016c578063f2fde38b1461019f578063fbfa77cf146101bb5761009c565b8063504006ca146100a0578063715018a6146100d057806387c51459146100da5780638a700b53146100f85780638da5cb5b14610114575b5f80fd5b6100ba60048036038101906100b59190610a29565b6101d9565b6040516100c79190610b0f565b60405180910390f35b6100d8610286565b005b6100e2610299565b6040516100ef9190610b37565b60405180910390f35b610112600480360381019061010d9190610b50565b61029f565b005b61011c6104a5565b6040516101299190610b9d565b60405180910390f35b61014c60048036038101906101479190610a29565b6104cc565b005b610156610627565b6040516101639190610c11565b60405180910390f35b61018660048036038101906101819190610a29565b61064b565b6040516101969493929190610c39565b60405180910390f35b6101b960048036038101906101b49190610ca6565b6106a2565b005b6101c3610726565b6040516101d09190610b9d565b60405180910390f35b6101e16109b6565b60015f8381526020019081526020015f206040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff1615151515815250509050919050565b61028e61074a565b6102975f6107d1565b565b60025481565b5f60015f8481526020019081526020015f209050806003015f9054906101000a900460ff1615610304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fb90610d2b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90610d93565b60405180910390fd5b80600201548210156103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d390610dfb565b60405180910390fd5b610449337f0000000000000000000000000000000000000000000000000000000000000000847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610892909392919063ffffffff16565b6001816003015f6101000a81548160ff0219169083151502179055507f512d3e65b3e58c2187bb1872aa435dba5bd09c1c03823ba56ab70aac411e4a2183338460405161049893929190610e19565b60405180910390a1505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f811161050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610e98565b60405180910390fd5b604051806080016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020015f151581525060015f60025481526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050507f8910ba13a55695f056e224bbbc6b65d866b12a8c2fbdf387fb853a1cca298cd7600254338360405161060b93929190610e19565b60405180910390a160025f815480929190600101919050555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b6106aa61074a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361071a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107119190610b9d565b60405180910390fd5b610723816107d1565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610752610914565b73ffffffffffffffffffffffffffffffffffffffff166107706104a5565b73ffffffffffffffffffffffffffffffffffffffff16146107cf57610793610914565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c69190610b9d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61090e848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016108c793929190610eb6565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061091b565b50505050565b5f33905090565b5f8060205f8451602086015f885af18061093a576040513d5f823e3d81fd5b3d92505f519150505f821461095357600181141561096e565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156109b057836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016109a79190610b9d565b60405180910390fd5b50505050565b60405180608001604052805f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f80fd5b5f819050919050565b610a08816109f6565b8114610a12575f80fd5b50565b5f81359050610a23816109ff565b92915050565b5f60208284031215610a3e57610a3d6109f2565b5b5f610a4b84828501610a15565b91505092915050565b610a5d816109f6565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a8c82610a63565b9050919050565b610a9c81610a82565b82525050565b5f8115159050919050565b610ab681610aa2565b82525050565b608082015f820151610ad05f850182610a54565b506020820151610ae36020850182610a93565b506040820151610af66040850182610a54565b506060820151610b096060850182610aad565b50505050565b5f608082019050610b225f830184610abc565b92915050565b610b31816109f6565b82525050565b5f602082019050610b4a5f830184610b28565b92915050565b5f8060408385031215610b6657610b656109f2565b5b5f610b7385828601610a15565b9250506020610b8485828601610a15565b9150509250929050565b610b9781610a82565b82525050565b5f602082019050610bb05f830184610b8e565b92915050565b5f819050919050565b5f610bd9610bd4610bcf84610a63565b610bb6565b610a63565b9050919050565b5f610bea82610bbf565b9050919050565b5f610bfb82610be0565b9050919050565b610c0b81610bf1565b82525050565b5f602082019050610c245f830184610c02565b92915050565b610c3381610aa2565b82525050565b5f608082019050610c4c5f830187610b28565b610c596020830186610b8e565b610c666040830185610b28565b610c736060830184610c2a565b95945050505050565b610c8581610a82565b8114610c8f575f80fd5b50565b5f81359050610ca081610c7c565b92915050565b5f60208284031215610cbb57610cba6109f2565b5b5f610cc884828501610c92565b91505092915050565b5f82825260208201905092915050565b7f416c7265616479207265706169640000000000000000000000000000000000005f82015250565b5f610d15600e83610cd1565b9150610d2082610ce1565b602082019050919050565b5f6020820190508181035f830152610d4281610d09565b9050919050565b7f4e6f7420626f72726f77657200000000000000000000000000000000000000005f82015250565b5f610d7d600c83610cd1565b9150610d8882610d49565b602082019050919050565b5f6020820190508181035f830152610daa81610d71565b9050919050565b7f496e73756666696369656e7420726570617900000000000000000000000000005f82015250565b5f610de5601283610cd1565b9150610df082610db1565b602082019050919050565b5f6020820190508181035f830152610e1281610dd9565b9050919050565b5f606082019050610e2c5f830186610b28565b610e396020830185610b8e565b610e466040830184610b28565b949350505050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f610e82601283610cd1565b9150610e8d82610e4e565b602082019050919050565b5f6020820190508181035f830152610eaf81610e76565b9050919050565b5f606082019050610ec95f830186610b8e565b610ed66020830185610b8e565b610ee36040830184610b28565b94935050505056fea264697066735822122042d4019879604e96ee93b83155f1673f35554b295a97525d9bb273213043c6b064736f6c63430008150033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13E2 CODESIZE SUB DUP1 PUSH3 0x13E2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x334 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x20E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x12D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x124 SWAP1 PUSH3 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x19E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x195 SWAP1 PUSH3 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x491 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2FE DUP3 PUSH3 0x2D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x310 DUP2 PUSH3 0x2F2 JUMP JUMPDEST DUP2 EQ PUSH3 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x32E DUP2 PUSH3 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x34D JUMPI PUSH3 0x34C PUSH3 0x2CF JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x35C DUP6 DUP3 DUP7 ADD PUSH3 0x31E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x36F DUP6 DUP3 DUP7 ADD PUSH3 0x31E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x384 DUP2 PUSH3 0x2F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x39F PUSH0 DUP4 ADD DUP5 PUSH3 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x3EB PUSH1 0xD DUP4 PUSH3 0x3A5 JUMP JUMPDEST SWAP2 POP PUSH3 0x3F8 DUP3 PUSH3 0x3B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x41C DUP2 PUSH3 0x3DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207661756C7400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x459 PUSH1 0xD DUP4 PUSH3 0x3A5 JUMP JUMPDEST SWAP2 POP PUSH3 0x466 DUP3 PUSH3 0x423 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x48A DUP2 PUSH3 0x44B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xF21 PUSH3 0x4C1 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x3E2 ADD MSTORE PUSH2 0x728 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x404 ADD MSTORE PUSH2 0x629 ADD MSTORE PUSH2 0xF21 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A4E8ECF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9A4E8ECF EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xBE81C529 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x1BB JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x504006CA EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x87C51459 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8A700B53 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x114 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x286 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28E PUSH2 0x74A JUMP JUMPDEST PUSH2 0x297 PUSH0 PUSH2 0x7D1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x304 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D3 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x449 CALLER PUSH32 0x0 DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x892 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x512D3E65B3E58C2187BB1872AA435DBA5BD09C1C03823BA56AB70AAC411E4A21 DUP4 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0x498 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x8910BA13A55695F056E224BBBC6B65D866B12A8C2FBDF387FB853A1CCA298CD7 PUSH1 0x2 SLOAD CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x60B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x74A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x7D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x752 PUSH2 0x914 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x770 PUSH2 0x4A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CF JUMPI PUSH2 0x793 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x90E DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x91B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x953 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x96E JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x9B0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP2 EQ PUSH2 0xA12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA23 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4B DUP5 DUP3 DUP6 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8C DUP3 PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0xA82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xAA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xAD0 PUSH0 DUP6 ADD DUP3 PUSH2 0xA54 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xAE3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xA93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xAF6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xA54 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xB09 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xAAD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xB22 PUSH0 DUP4 ADD DUP5 PUSH2 0xABC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4A PUSH0 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB66 JUMPI PUSH2 0xB65 PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB73 DUP6 DUP3 DUP7 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB84 DUP6 DUP3 DUP7 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB97 DUP2 PUSH2 0xA82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xB8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBD9 PUSH2 0xBD4 PUSH2 0xBCF DUP5 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBEA DUP3 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBFB DUP3 PUSH2 0xBE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xBF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC24 PUSH0 DUP4 ADD DUP5 PUSH2 0xC02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xAA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC4C PUSH0 DUP4 ADD DUP8 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xC59 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xC66 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xC73 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC2A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC85 DUP2 PUSH2 0xA82 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA0 DUP2 PUSH2 0xC7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBA PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCC8 DUP5 DUP3 DUP6 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920726570616964000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 PUSH1 0xE DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD20 DUP3 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD42 DUP2 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420626F72726F7765720000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD7D PUSH1 0xC DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD88 DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDAA DUP2 PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657061790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE5 PUSH1 0x12 DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xDF0 DUP3 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE12 DUP2 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE2C PUSH0 DUP4 ADD DUP7 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xE39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xE46 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH1 0x12 DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8D DUP3 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAF DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEC9 PUSH0 DUP4 ADD DUP7 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xD4 ADD SWAP9 PUSH26 0x604E96EE93B83155F1673F35554B295A97525D9BB273213043C6 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "242:1615:8:-:0;;;736:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;800:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;855:1:8::1;831:26;;:12;:26;;::::0;823:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;918:1;894:26;;:12;:26;;::::0;886:52:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;967:12;949:31;;;;;;;;::::0;::::1;999:12;991:20;;;;;;;;::::0;::::1;736:283:::0;;242:1615;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:163::-;2025:15;2021:1;2013:6;2009:14;2002:39;1885:163;:::o;2054:366::-;2196:3;2217:67;2281:2;2276:3;2217:67;:::i;:::-;2210:74;;2293:93;2382:3;2293:93;:::i;:::-;2411:2;2406:3;2402:12;2395:19;;2054:366;;;:::o;2426:419::-;2592:4;2630:2;2619:9;2615:18;2607:26;;2679:9;2673:4;2669:20;2665:1;2654:9;2650:17;2643:47;2707:131;2833:4;2707:131;:::i;:::-;2699:139;;2426:419;;;:::o;2851:163::-;2991:15;2987:1;2979:6;2975:14;2968:39;2851:163;:::o;3020:366::-;3162:3;3183:67;3247:2;3242:3;3183:67;:::i;:::-;3176:74;;3259:93;3348:3;3259:93;:::i;:::-;3377:2;3372:3;3368:12;3361:19;;3020:366;;;:::o;3392:419::-;3558:4;3596:2;3585:9;3581:18;3573:26;;3645:9;3639:4;3635:20;3631:1;3620:9;3616:17;3609:47;3673:131;3799:4;3673:131;:::i;:::-;3665:139;;3392:419;;;:::o;242:1615:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_737": {
									"entryPoint": 2331,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1866,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_791": {
									"entryPoint": 2324,
									"id": 791,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2001,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bhcToken_835": {
									"entryPoint": 1575,
									"id": 835,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createLoan_947": {
									"entryPoint": 1228,
									"id": 947,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getLoan_1021": {
									"entryPoint": 473,
									"id": 1021,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@loans_851": {
									"entryPoint": 1611,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextLoanId_853": {
									"entryPoint": 665,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1189,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 646,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@repayLoan_1008": {
									"entryPoint": 671,
									"id": 1008,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_387": {
									"entryPoint": 2194,
									"id": 387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1698,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vault_837": {
									"entryPoint": 1830,
									"id": 837,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 2733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 3074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Loan_$846_memory_ptr_to_t_struct$_Loan_$846_memory_ptr_fromStack": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 3089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Loan_$846_memory_ptr__to_t_struct$_Loan_$846_memory_ptr__fromStack_reversed": {
									"entryPoint": 2831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3609,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 3057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46": {
									"entryPoint": 3297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847": {
									"entryPoint": 3505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11221:9",
										"nodeType": "YulBlock",
										"src": "0:11221:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "597:87:9",
													"nodeType": "YulBlock",
													"src": "597:87:9",
													"statements": [
														{
															"nativeSrc": "607:29:9",
															"nodeType": "YulAssignment",
															"src": "607:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:9"
																},
																"nativeSrc": "616:20:9",
																"nodeType": "YulFunctionCall",
																"src": "616:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:9"
																},
																"nativeSrc": "645:33:9",
																"nodeType": "YulFunctionCall",
																"src": "645:33:9"
															},
															"nativeSrc": "645:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:9",
														"nodeType": "YulTypedName",
														"src": "575:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:9",
														"nodeType": "YulTypedName",
														"src": "583:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:9",
														"nodeType": "YulTypedName",
														"src": "591:5:9",
														"type": ""
													}
												],
												"src": "545:139:9"
											},
											{
												"body": {
													"nativeSrc": "756:263:9",
													"nodeType": "YulBlock",
													"src": "756:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:9",
																"nodeType": "YulBlock",
																"src": "802:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:9"
																			},
																			"nativeSrc": "804:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:9"
																		},
																		"nativeSrc": "804:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:9"
																		},
																		"nativeSrc": "773:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:9",
																		"nodeType": "YulLiteral",
																		"src": "798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:9"
																},
																"nativeSrc": "769:32:9",
																"nodeType": "YulFunctionCall",
																"src": "769:32:9"
															},
															"nativeSrc": "766:119:9",
															"nodeType": "YulIf",
															"src": "766:119:9"
														},
														{
															"nativeSrc": "895:117:9",
															"nodeType": "YulBlock",
															"src": "895:117:9",
															"statements": [
																{
																	"nativeSrc": "910:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:9",
																		"nodeType": "YulLiteral",
																		"src": "924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:9",
																			"nodeType": "YulTypedName",
																			"src": "914:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:9",
																	"nodeType": "YulAssignment",
																	"src": "939:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:9"
																				},
																				"nativeSrc": "970:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:9"
																		},
																		"nativeSrc": "949:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:9",
														"nodeType": "YulTypedName",
														"src": "726:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:9",
														"nodeType": "YulTypedName",
														"src": "737:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:9",
														"nodeType": "YulTypedName",
														"src": "749:6:9",
														"type": ""
													}
												],
												"src": "690:329:9"
											},
											{
												"body": {
													"nativeSrc": "1080:53:9",
													"nodeType": "YulBlock",
													"src": "1080:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1097:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1097:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1120:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1120:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1102:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1102:17:9"
																		},
																		"nativeSrc": "1102:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1102:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1090:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:9"
																},
																"nativeSrc": "1090:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1090:37:9"
															},
															"nativeSrc": "1090:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1090:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1025:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1068:5:9",
														"nodeType": "YulTypedName",
														"src": "1068:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1075:3:9",
														"nodeType": "YulTypedName",
														"src": "1075:3:9",
														"type": ""
													}
												],
												"src": "1025:108:9"
											},
											{
												"body": {
													"nativeSrc": "1184:81:9",
													"nodeType": "YulBlock",
													"src": "1184:81:9",
													"statements": [
														{
															"nativeSrc": "1194:65:9",
															"nodeType": "YulAssignment",
															"src": "1194:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1209:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1209:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1216:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1216:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1205:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:9"
																},
																"nativeSrc": "1205:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1205:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1194:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1194:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1139:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1166:5:9",
														"nodeType": "YulTypedName",
														"src": "1166:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1176:7:9",
														"nodeType": "YulTypedName",
														"src": "1176:7:9",
														"type": ""
													}
												],
												"src": "1139:126:9"
											},
											{
												"body": {
													"nativeSrc": "1316:51:9",
													"nodeType": "YulBlock",
													"src": "1316:51:9",
													"statements": [
														{
															"nativeSrc": "1326:35:9",
															"nodeType": "YulAssignment",
															"src": "1326:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1355:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1355:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1337:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1337:17:9"
																},
																"nativeSrc": "1337:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1337:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1326:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1326:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1271:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1298:5:9",
														"nodeType": "YulTypedName",
														"src": "1298:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1308:7:9",
														"nodeType": "YulTypedName",
														"src": "1308:7:9",
														"type": ""
													}
												],
												"src": "1271:96:9"
											},
											{
												"body": {
													"nativeSrc": "1428:53:9",
													"nodeType": "YulBlock",
													"src": "1428:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1445:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1445:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1468:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1468:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1450:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1450:17:9"
																		},
																		"nativeSrc": "1450:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1450:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1438:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:9"
																},
																"nativeSrc": "1438:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1438:37:9"
															},
															"nativeSrc": "1438:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1438:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "1373:108:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1416:5:9",
														"nodeType": "YulTypedName",
														"src": "1416:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1423:3:9",
														"nodeType": "YulTypedName",
														"src": "1423:3:9",
														"type": ""
													}
												],
												"src": "1373:108:9"
											},
											{
												"body": {
													"nativeSrc": "1529:48:9",
													"nodeType": "YulBlock",
													"src": "1529:48:9",
													"statements": [
														{
															"nativeSrc": "1539:32:9",
															"nodeType": "YulAssignment",
															"src": "1539:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1564:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1564:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1557:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1557:6:9"
																		},
																		"nativeSrc": "1557:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1557:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1550:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1550:6:9"
																},
																"nativeSrc": "1550:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1550:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1539:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1539:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1487:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1511:5:9",
														"nodeType": "YulTypedName",
														"src": "1511:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1521:7:9",
														"nodeType": "YulTypedName",
														"src": "1521:7:9",
														"type": ""
													}
												],
												"src": "1487:90:9"
											},
											{
												"body": {
													"nativeSrc": "1632:50:9",
													"nodeType": "YulBlock",
													"src": "1632:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1649:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1649:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1669:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1669:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1654:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "1654:14:9"
																		},
																		"nativeSrc": "1654:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1654:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1642:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1642:6:9"
																},
																"nativeSrc": "1642:34:9",
																"nodeType": "YulFunctionCall",
																"src": "1642:34:9"
															},
															"nativeSrc": "1642:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "1642:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "1583:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1620:5:9",
														"nodeType": "YulTypedName",
														"src": "1620:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1627:3:9",
														"nodeType": "YulTypedName",
														"src": "1627:3:9",
														"type": ""
													}
												],
												"src": "1583:99:9"
											},
											{
												"body": {
													"nativeSrc": "1854:739:9",
													"nodeType": "YulBlock",
													"src": "1854:739:9",
													"statements": [
														{
															"nativeSrc": "1864:26:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1864:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1880:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1880:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1885:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1885:4:9",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1876:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1876:3:9"
																},
																"nativeSrc": "1876:14:9",
																"nodeType": "YulFunctionCall",
																"src": "1876:14:9"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1868:4:9",
																	"nodeType": "YulTypedName",
																	"src": "1868:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1900:162:9",
															"nodeType": "YulBlock",
															"src": "1900:162:9",
															"statements": [
																{
																	"nativeSrc": "1933:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1933:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1963:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1963:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1970:4:9",
																						"nodeType": "YulLiteral",
																						"src": "1970:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1959:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1959:3:9"
																				},
																				"nativeSrc": "1959:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1959:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1953:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "1953:5:9"
																		},
																		"nativeSrc": "1953:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1937:12:9",
																			"nodeType": "YulTypedName",
																			"src": "1937:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2023:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "2023:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2041:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2041:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2046:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2046:4:9",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2037:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2037:3:9"
																				},
																				"nativeSrc": "2037:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2037:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "1989:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "1989:33:9"
																		},
																		"nativeSrc": "1989:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1989:63:9"
																	},
																	"nativeSrc": "1989:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "1989:63:9"
																}
															]
														},
														{
															"nativeSrc": "2072:168:9",
															"nodeType": "YulBlock",
															"src": "2072:168:9",
															"statements": [
																{
																	"nativeSrc": "2111:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2111:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2141:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2141:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2148:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2148:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2137:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2137:3:9"
																				},
																				"nativeSrc": "2137:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2131:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2131:5:9"
																		},
																		"nativeSrc": "2131:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2131:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2115:12:9",
																			"nodeType": "YulTypedName",
																			"src": "2115:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2201:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "2201:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2219:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2219:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2224:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2224:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2215:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2215:3:9"
																				},
																				"nativeSrc": "2215:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2215:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "2167:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "2167:33:9"
																		},
																		"nativeSrc": "2167:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2167:63:9"
																	},
																	"nativeSrc": "2167:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "2167:63:9"
																}
															]
														},
														{
															"nativeSrc": "2250:166:9",
															"nodeType": "YulBlock",
															"src": "2250:166:9",
															"statements": [
																{
																	"nativeSrc": "2287:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2287:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2317:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2317:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2324:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2324:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2313:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2313:3:9"
																				},
																				"nativeSrc": "2313:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2313:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2307:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2307:5:9"
																		},
																		"nativeSrc": "2307:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2307:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2291:12:9",
																			"nodeType": "YulTypedName",
																			"src": "2291:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2377:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "2377:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2395:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2395:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2400:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2400:4:9",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2391:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:9"
																				},
																				"nativeSrc": "2391:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2343:33:9",
																			"nodeType": "YulIdentifier",
																			"src": "2343:33:9"
																		},
																		"nativeSrc": "2343:63:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2343:63:9"
																	},
																	"nativeSrc": "2343:63:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "2343:63:9"
																}
															]
														},
														{
															"nativeSrc": "2426:160:9",
															"nodeType": "YulBlock",
															"src": "2426:160:9",
															"statements": [
																{
																	"nativeSrc": "2463:43:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2463:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2493:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2493:5:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2500:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2500:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2489:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2489:3:9"
																				},
																				"nativeSrc": "2489:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2489:16:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2483:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "2483:5:9"
																		},
																		"nativeSrc": "2483:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:23:9"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2467:12:9",
																			"nodeType": "YulTypedName",
																			"src": "2467:12:9",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2547:12:9",
																				"nodeType": "YulIdentifier",
																				"src": "2547:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2565:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "2565:3:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2570:4:9",
																						"nodeType": "YulLiteral",
																						"src": "2570:4:9",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2561:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2561:3:9"
																				},
																				"nativeSrc": "2561:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2561:14:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "2519:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "2519:27:9"
																		},
																		"nativeSrc": "2519:57:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:57:9"
																	},
																	"nativeSrc": "2519:57:9",
																	"nodeType": "YulExpressionStatement",
																	"src": "2519:57:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Loan_$846_memory_ptr_to_t_struct$_Loan_$846_memory_ptr_fromStack",
												"nativeSrc": "1746:847:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1841:5:9",
														"nodeType": "YulTypedName",
														"src": "1841:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1848:3:9",
														"nodeType": "YulTypedName",
														"src": "1848:3:9",
														"type": ""
													}
												],
												"src": "1746:847:9"
											},
											{
												"body": {
													"nativeSrc": "2739:167:9",
													"nodeType": "YulBlock",
													"src": "2739:167:9",
													"statements": [
														{
															"nativeSrc": "2749:27:9",
															"nodeType": "YulAssignment",
															"src": "2749:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2761:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2761:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2772:3:9",
																		"nodeType": "YulLiteral",
																		"src": "2772:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2757:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:9"
																},
																"nativeSrc": "2757:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2757:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2749:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2749:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2872:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2872:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2885:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2885:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2896:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2896:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2881:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2881:3:9"
																		},
																		"nativeSrc": "2881:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2881:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Loan_$846_memory_ptr_to_t_struct$_Loan_$846_memory_ptr_fromStack",
																	"nativeSrc": "2786:85:9",
																	"nodeType": "YulIdentifier",
																	"src": "2786:85:9"
																},
																"nativeSrc": "2786:113:9",
																"nodeType": "YulFunctionCall",
																"src": "2786:113:9"
															},
															"nativeSrc": "2786:113:9",
															"nodeType": "YulExpressionStatement",
															"src": "2786:113:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Loan_$846_memory_ptr__to_t_struct$_Loan_$846_memory_ptr__fromStack_reversed",
												"nativeSrc": "2599:307:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2711:9:9",
														"nodeType": "YulTypedName",
														"src": "2711:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2723:6:9",
														"nodeType": "YulTypedName",
														"src": "2723:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2734:4:9",
														"nodeType": "YulTypedName",
														"src": "2734:4:9",
														"type": ""
													}
												],
												"src": "2599:307:9"
											},
											{
												"body": {
													"nativeSrc": "2977:53:9",
													"nodeType": "YulBlock",
													"src": "2977:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2994:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2994:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3017:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3017:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2999:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "2999:17:9"
																		},
																		"nativeSrc": "2999:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2987:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2987:6:9"
																},
																"nativeSrc": "2987:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2987:37:9"
															},
															"nativeSrc": "2987:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "2987:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2912:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2965:5:9",
														"nodeType": "YulTypedName",
														"src": "2965:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2972:3:9",
														"nodeType": "YulTypedName",
														"src": "2972:3:9",
														"type": ""
													}
												],
												"src": "2912:118:9"
											},
											{
												"body": {
													"nativeSrc": "3134:124:9",
													"nodeType": "YulBlock",
													"src": "3134:124:9",
													"statements": [
														{
															"nativeSrc": "3144:26:9",
															"nodeType": "YulAssignment",
															"src": "3144:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3156:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3156:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3167:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3167:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3152:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3152:3:9"
																},
																"nativeSrc": "3152:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3152:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3144:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3224:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3224:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3237:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3237:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3248:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3248:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3233:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3233:3:9"
																		},
																		"nativeSrc": "3233:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3233:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3180:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3180:43:9"
																},
																"nativeSrc": "3180:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3180:71:9"
															},
															"nativeSrc": "3180:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3180:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3036:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3106:9:9",
														"nodeType": "YulTypedName",
														"src": "3106:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3118:6:9",
														"nodeType": "YulTypedName",
														"src": "3118:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3129:4:9",
														"nodeType": "YulTypedName",
														"src": "3129:4:9",
														"type": ""
													}
												],
												"src": "3036:222:9"
											},
											{
												"body": {
													"nativeSrc": "3347:391:9",
													"nodeType": "YulBlock",
													"src": "3347:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3393:83:9",
																"nodeType": "YulBlock",
																"src": "3393:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3395:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3395:77:9"
																			},
																			"nativeSrc": "3395:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3395:79:9"
																		},
																		"nativeSrc": "3395:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3395:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3368:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3368:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3377:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3377:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3364:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:9"
																		},
																		"nativeSrc": "3364:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3364:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3389:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3360:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3360:3:9"
																},
																"nativeSrc": "3360:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3360:32:9"
															},
															"nativeSrc": "3357:119:9",
															"nodeType": "YulIf",
															"src": "3357:119:9"
														},
														{
															"nativeSrc": "3486:117:9",
															"nodeType": "YulBlock",
															"src": "3486:117:9",
															"statements": [
																{
																	"nativeSrc": "3501:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3501:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3515:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3505:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3505:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3530:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3530:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3565:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3565:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3576:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3576:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3561:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3561:3:9"
																				},
																				"nativeSrc": "3561:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3561:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3585:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3585:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3540:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3540:20:9"
																		},
																		"nativeSrc": "3540:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3540:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3530:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3530:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3613:118:9",
															"nodeType": "YulBlock",
															"src": "3613:118:9",
															"statements": [
																{
																	"nativeSrc": "3628:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3628:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3642:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3632:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3632:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3658:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3658:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3693:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3693:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3704:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3704:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3689:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3689:3:9"
																				},
																				"nativeSrc": "3689:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3689:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3713:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3713:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3668:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3668:20:9"
																		},
																		"nativeSrc": "3668:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3658:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3658:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3264:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3309:9:9",
														"nodeType": "YulTypedName",
														"src": "3309:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3320:7:9",
														"nodeType": "YulTypedName",
														"src": "3320:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3332:6:9",
														"nodeType": "YulTypedName",
														"src": "3332:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3340:6:9",
														"nodeType": "YulTypedName",
														"src": "3340:6:9",
														"type": ""
													}
												],
												"src": "3264:474:9"
											},
											{
												"body": {
													"nativeSrc": "3809:53:9",
													"nodeType": "YulBlock",
													"src": "3809:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3826:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3826:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3849:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3849:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3831:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3831:17:9"
																		},
																		"nativeSrc": "3831:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3831:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3819:6:9"
																},
																"nativeSrc": "3819:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3819:37:9"
															},
															"nativeSrc": "3819:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3819:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3744:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3797:5:9",
														"nodeType": "YulTypedName",
														"src": "3797:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3804:3:9",
														"nodeType": "YulTypedName",
														"src": "3804:3:9",
														"type": ""
													}
												],
												"src": "3744:118:9"
											},
											{
												"body": {
													"nativeSrc": "3966:124:9",
													"nodeType": "YulBlock",
													"src": "3966:124:9",
													"statements": [
														{
															"nativeSrc": "3976:26:9",
															"nodeType": "YulAssignment",
															"src": "3976:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3988:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3988:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3999:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3984:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3984:3:9"
																},
																"nativeSrc": "3984:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3984:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3976:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3976:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4056:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4056:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4069:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4069:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4080:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4080:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4065:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4065:3:9"
																		},
																		"nativeSrc": "4065:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4065:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4012:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4012:43:9"
																},
																"nativeSrc": "4012:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4012:71:9"
															},
															"nativeSrc": "4012:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4012:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3868:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3938:9:9",
														"nodeType": "YulTypedName",
														"src": "3938:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3950:6:9",
														"nodeType": "YulTypedName",
														"src": "3950:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3961:4:9",
														"nodeType": "YulTypedName",
														"src": "3961:4:9",
														"type": ""
													}
												],
												"src": "3868:222:9"
											},
											{
												"body": {
													"nativeSrc": "4128:28:9",
													"nodeType": "YulBlock",
													"src": "4128:28:9",
													"statements": [
														{
															"nativeSrc": "4138:12:9",
															"nodeType": "YulAssignment",
															"src": "4138:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4145:5:9",
																"nodeType": "YulIdentifier",
																"src": "4145:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4138:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4138:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4096:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4114:5:9",
														"nodeType": "YulTypedName",
														"src": "4114:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4124:3:9",
														"nodeType": "YulTypedName",
														"src": "4124:3:9",
														"type": ""
													}
												],
												"src": "4096:60:9"
											},
											{
												"body": {
													"nativeSrc": "4222:82:9",
													"nodeType": "YulBlock",
													"src": "4222:82:9",
													"statements": [
														{
															"nativeSrc": "4232:66:9",
															"nodeType": "YulAssignment",
															"src": "4232:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4290:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4290:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4272:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4272:17:9"
																				},
																				"nativeSrc": "4272:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4272:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4263:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "4263:8:9"
																		},
																		"nativeSrc": "4263:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4263:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4245:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4245:17:9"
																},
																"nativeSrc": "4245:53:9",
																"nodeType": "YulFunctionCall",
																"src": "4245:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4232:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4232:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4162:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4202:5:9",
														"nodeType": "YulTypedName",
														"src": "4202:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4212:9:9",
														"nodeType": "YulTypedName",
														"src": "4212:9:9",
														"type": ""
													}
												],
												"src": "4162:142:9"
											},
											{
												"body": {
													"nativeSrc": "4370:66:9",
													"nodeType": "YulBlock",
													"src": "4370:66:9",
													"statements": [
														{
															"nativeSrc": "4380:50:9",
															"nodeType": "YulAssignment",
															"src": "4380:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4424:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4424:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4393:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "4393:30:9"
																},
																"nativeSrc": "4393:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4393:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4380:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4380:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4310:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4350:5:9",
														"nodeType": "YulTypedName",
														"src": "4350:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4360:9:9",
														"nodeType": "YulTypedName",
														"src": "4360:9:9",
														"type": ""
													}
												],
												"src": "4310:126:9"
											},
											{
												"body": {
													"nativeSrc": "4516:66:9",
													"nodeType": "YulBlock",
													"src": "4516:66:9",
													"statements": [
														{
															"nativeSrc": "4526:50:9",
															"nodeType": "YulAssignment",
															"src": "4526:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4570:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4570:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4539:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "4539:30:9"
																},
																"nativeSrc": "4539:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4539:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4526:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4526:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "4442:140:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4496:5:9",
														"nodeType": "YulTypedName",
														"src": "4496:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4506:9:9",
														"nodeType": "YulTypedName",
														"src": "4506:9:9",
														"type": ""
													}
												],
												"src": "4442:140:9"
											},
											{
												"body": {
													"nativeSrc": "4667:80:9",
													"nodeType": "YulBlock",
													"src": "4667:80:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4684:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4684:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4734:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4734:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "4689:44:9",
																			"nodeType": "YulIdentifier",
																			"src": "4689:44:9"
																		},
																		"nativeSrc": "4689:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4689:51:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4677:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4677:6:9"
																},
																"nativeSrc": "4677:64:9",
																"nodeType": "YulFunctionCall",
																"src": "4677:64:9"
															},
															"nativeSrc": "4677:64:9",
															"nodeType": "YulExpressionStatement",
															"src": "4677:64:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "4588:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:9",
														"nodeType": "YulTypedName",
														"src": "4655:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4662:3:9",
														"nodeType": "YulTypedName",
														"src": "4662:3:9",
														"type": ""
													}
												],
												"src": "4588:159:9"
											},
											{
												"body": {
													"nativeSrc": "4865:138:9",
													"nodeType": "YulBlock",
													"src": "4865:138:9",
													"statements": [
														{
															"nativeSrc": "4875:26:9",
															"nodeType": "YulAssignment",
															"src": "4875:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4887:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4887:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4898:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4898:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4883:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4883:3:9"
																},
																"nativeSrc": "4883:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4883:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4875:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4875:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4969:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4969:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4982:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4982:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4993:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4993:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4978:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4978:3:9"
																		},
																		"nativeSrc": "4978:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4978:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "4911:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "4911:57:9"
																},
																"nativeSrc": "4911:85:9",
																"nodeType": "YulFunctionCall",
																"src": "4911:85:9"
															},
															"nativeSrc": "4911:85:9",
															"nodeType": "YulExpressionStatement",
															"src": "4911:85:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "4753:250:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:9",
														"nodeType": "YulTypedName",
														"src": "4837:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4849:6:9",
														"nodeType": "YulTypedName",
														"src": "4849:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4860:4:9",
														"nodeType": "YulTypedName",
														"src": "4860:4:9",
														"type": ""
													}
												],
												"src": "4753:250:9"
											},
											{
												"body": {
													"nativeSrc": "5068:50:9",
													"nodeType": "YulBlock",
													"src": "5068:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5085:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5085:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5105:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5105:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5090:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "5090:14:9"
																		},
																		"nativeSrc": "5090:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5078:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:9"
																},
																"nativeSrc": "5078:34:9",
																"nodeType": "YulFunctionCall",
																"src": "5078:34:9"
															},
															"nativeSrc": "5078:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "5078:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5009:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5056:5:9",
														"nodeType": "YulTypedName",
														"src": "5056:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5063:3:9",
														"nodeType": "YulTypedName",
														"src": "5063:3:9",
														"type": ""
													}
												],
												"src": "5009:109:9"
											},
											{
												"body": {
													"nativeSrc": "5300:365:9",
													"nodeType": "YulBlock",
													"src": "5300:365:9",
													"statements": [
														{
															"nativeSrc": "5310:27:9",
															"nodeType": "YulAssignment",
															"src": "5310:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5322:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5322:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5333:3:9",
																		"nodeType": "YulLiteral",
																		"src": "5333:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5318:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5318:3:9"
																},
																"nativeSrc": "5318:19:9",
																"nodeType": "YulFunctionCall",
																"src": "5318:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5310:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5391:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5391:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5404:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5404:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5415:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5415:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5400:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:9"
																		},
																		"nativeSrc": "5400:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5347:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5347:43:9"
																},
																"nativeSrc": "5347:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5347:71:9"
															},
															"nativeSrc": "5347:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5347:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5472:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5472:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5485:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5485:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5496:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5496:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5481:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:9"
																		},
																		"nativeSrc": "5481:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5481:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5428:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5428:43:9"
																},
																"nativeSrc": "5428:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5428:72:9"
															},
															"nativeSrc": "5428:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5428:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5554:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5554:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5567:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5567:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5578:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5578:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5563:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5563:3:9"
																		},
																		"nativeSrc": "5563:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5563:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5510:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5510:43:9"
																},
																"nativeSrc": "5510:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5510:72:9"
															},
															"nativeSrc": "5510:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5510:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5630:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5630:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5643:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5643:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5654:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5654:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5639:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5639:3:9"
																		},
																		"nativeSrc": "5639:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5639:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5592:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "5592:37:9"
																},
																"nativeSrc": "5592:66:9",
																"nodeType": "YulFunctionCall",
																"src": "5592:66:9"
															},
															"nativeSrc": "5592:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "5592:66:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "5124:541:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5248:9:9",
														"nodeType": "YulTypedName",
														"src": "5248:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5260:6:9",
														"nodeType": "YulTypedName",
														"src": "5260:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5268:6:9",
														"nodeType": "YulTypedName",
														"src": "5268:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5276:6:9",
														"nodeType": "YulTypedName",
														"src": "5276:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5284:6:9",
														"nodeType": "YulTypedName",
														"src": "5284:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5295:4:9",
														"nodeType": "YulTypedName",
														"src": "5295:4:9",
														"type": ""
													}
												],
												"src": "5124:541:9"
											},
											{
												"body": {
													"nativeSrc": "5714:79:9",
													"nodeType": "YulBlock",
													"src": "5714:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5771:16:9",
																"nodeType": "YulBlock",
																"src": "5771:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5780:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5780:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5783:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5783:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5773:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:9"
																			},
																			"nativeSrc": "5773:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5773:12:9"
																		},
																		"nativeSrc": "5773:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5737:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5737:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5762:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5762:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "5744:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5744:17:9"
																				},
																				"nativeSrc": "5744:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5744:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5734:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5734:2:9"
																		},
																		"nativeSrc": "5734:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5734:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5727:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:9"
																},
																"nativeSrc": "5727:43:9",
																"nodeType": "YulFunctionCall",
																"src": "5727:43:9"
															},
															"nativeSrc": "5724:63:9",
															"nodeType": "YulIf",
															"src": "5724:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "5671:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5707:5:9",
														"nodeType": "YulTypedName",
														"src": "5707:5:9",
														"type": ""
													}
												],
												"src": "5671:122:9"
											},
											{
												"body": {
													"nativeSrc": "5851:87:9",
													"nodeType": "YulBlock",
													"src": "5851:87:9",
													"statements": [
														{
															"nativeSrc": "5861:29:9",
															"nodeType": "YulAssignment",
															"src": "5861:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5883:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5870:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "5870:12:9"
																},
																"nativeSrc": "5870:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5870:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5861:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5861:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5926:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5926:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "5899:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "5899:26:9"
																},
																"nativeSrc": "5899:33:9",
																"nodeType": "YulFunctionCall",
																"src": "5899:33:9"
															},
															"nativeSrc": "5899:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "5899:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "5799:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5829:6:9",
														"nodeType": "YulTypedName",
														"src": "5829:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5837:3:9",
														"nodeType": "YulTypedName",
														"src": "5837:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5845:5:9",
														"nodeType": "YulTypedName",
														"src": "5845:5:9",
														"type": ""
													}
												],
												"src": "5799:139:9"
											},
											{
												"body": {
													"nativeSrc": "6010:263:9",
													"nodeType": "YulBlock",
													"src": "6010:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6056:83:9",
																"nodeType": "YulBlock",
																"src": "6056:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6058:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6058:77:9"
																			},
																			"nativeSrc": "6058:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:79:9"
																		},
																		"nativeSrc": "6058:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6058:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6031:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6031:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6040:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6027:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6027:3:9"
																		},
																		"nativeSrc": "6027:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6027:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6052:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6052:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6023:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:9"
																},
																"nativeSrc": "6023:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6023:32:9"
															},
															"nativeSrc": "6020:119:9",
															"nodeType": "YulIf",
															"src": "6020:119:9"
														},
														{
															"nativeSrc": "6149:117:9",
															"nodeType": "YulBlock",
															"src": "6149:117:9",
															"statements": [
																{
																	"nativeSrc": "6164:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6164:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6178:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6178:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6168:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6168:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6193:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6193:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6228:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6228:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6239:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6239:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6224:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6224:3:9"
																				},
																				"nativeSrc": "6224:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6224:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6248:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6248:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6203:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6203:20:9"
																		},
																		"nativeSrc": "6203:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6203:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6193:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6193:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5944:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5980:9:9",
														"nodeType": "YulTypedName",
														"src": "5980:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5991:7:9",
														"nodeType": "YulTypedName",
														"src": "5991:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6003:6:9",
														"nodeType": "YulTypedName",
														"src": "6003:6:9",
														"type": ""
													}
												],
												"src": "5944:329:9"
											},
											{
												"body": {
													"nativeSrc": "6375:73:9",
													"nodeType": "YulBlock",
													"src": "6375:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6392:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6392:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6397:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6397:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6385:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6385:6:9"
																},
																"nativeSrc": "6385:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6385:19:9"
															},
															"nativeSrc": "6385:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "6385:19:9"
														},
														{
															"nativeSrc": "6413:29:9",
															"nodeType": "YulAssignment",
															"src": "6413:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6432:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6432:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6437:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6437:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6428:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:9"
																},
																"nativeSrc": "6428:14:9",
																"nodeType": "YulFunctionCall",
																"src": "6428:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6413:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "6413:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6279:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6347:3:9",
														"nodeType": "YulTypedName",
														"src": "6347:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6352:6:9",
														"nodeType": "YulTypedName",
														"src": "6352:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6363:11:9",
														"nodeType": "YulTypedName",
														"src": "6363:11:9",
														"type": ""
													}
												],
												"src": "6279:169:9"
											},
											{
												"body": {
													"nativeSrc": "6560:58:9",
													"nodeType": "YulBlock",
													"src": "6560:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6582:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6582:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6590:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6590:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6578:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6578:3:9"
																		},
																		"nativeSrc": "6578:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6578:14:9"
																	},
																	{
																		"hexValue": "416c726561647920726570616964",
																		"kind": "string",
																		"nativeSrc": "6594:16:9",
																		"nodeType": "YulLiteral",
																		"src": "6594:16:9",
																		"type": "",
																		"value": "Already repaid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6571:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6571:6:9"
																},
																"nativeSrc": "6571:40:9",
																"nodeType": "YulFunctionCall",
																"src": "6571:40:9"
															},
															"nativeSrc": "6571:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "6571:40:9"
														}
													]
												},
												"name": "store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46",
												"nativeSrc": "6454:164:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6552:6:9",
														"nodeType": "YulTypedName",
														"src": "6552:6:9",
														"type": ""
													}
												],
												"src": "6454:164:9"
											},
											{
												"body": {
													"nativeSrc": "6770:220:9",
													"nodeType": "YulBlock",
													"src": "6770:220:9",
													"statements": [
														{
															"nativeSrc": "6780:74:9",
															"nodeType": "YulAssignment",
															"src": "6780:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6846:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6846:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6851:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6851:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6787:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "6787:58:9"
																},
																"nativeSrc": "6787:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6787:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6780:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6780:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6952:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6952:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46",
																	"nativeSrc": "6863:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "6863:88:9"
																},
																"nativeSrc": "6863:93:9",
																"nodeType": "YulFunctionCall",
																"src": "6863:93:9"
															},
															"nativeSrc": "6863:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "6863:93:9"
														},
														{
															"nativeSrc": "6965:19:9",
															"nodeType": "YulAssignment",
															"src": "6965:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6976:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6976:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6972:3:9"
																},
																"nativeSrc": "6972:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6972:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6965:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6965:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6624:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6758:3:9",
														"nodeType": "YulTypedName",
														"src": "6758:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6766:3:9",
														"nodeType": "YulTypedName",
														"src": "6766:3:9",
														"type": ""
													}
												],
												"src": "6624:366:9"
											},
											{
												"body": {
													"nativeSrc": "7167:248:9",
													"nodeType": "YulBlock",
													"src": "7167:248:9",
													"statements": [
														{
															"nativeSrc": "7177:26:9",
															"nodeType": "YulAssignment",
															"src": "7177:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7189:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7189:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7200:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7200:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7185:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7185:3:9"
																},
																"nativeSrc": "7185:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7185:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7177:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7177:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7224:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7224:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7235:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7235:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:9"
																		},
																		"nativeSrc": "7220:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7220:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7243:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7243:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7249:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7249:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7239:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7239:3:9"
																		},
																		"nativeSrc": "7239:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7239:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7213:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7213:6:9"
																},
																"nativeSrc": "7213:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7213:47:9"
															},
															"nativeSrc": "7213:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7213:47:9"
														},
														{
															"nativeSrc": "7269:139:9",
															"nodeType": "YulAssignment",
															"src": "7269:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7403:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7403:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7277:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "7277:124:9"
																},
																"nativeSrc": "7277:131:9",
																"nodeType": "YulFunctionCall",
																"src": "7277:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7269:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7269:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6996:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7147:9:9",
														"nodeType": "YulTypedName",
														"src": "7147:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7162:4:9",
														"nodeType": "YulTypedName",
														"src": "7162:4:9",
														"type": ""
													}
												],
												"src": "6996:419:9"
											},
											{
												"body": {
													"nativeSrc": "7527:56:9",
													"nodeType": "YulBlock",
													"src": "7527:56:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7549:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7549:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7557:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7557:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7545:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:9"
																		},
																		"nativeSrc": "7545:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:14:9"
																	},
																	{
																		"hexValue": "4e6f7420626f72726f776572",
																		"kind": "string",
																		"nativeSrc": "7561:14:9",
																		"nodeType": "YulLiteral",
																		"src": "7561:14:9",
																		"type": "",
																		"value": "Not borrower"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:9"
																},
																"nativeSrc": "7538:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7538:38:9"
															},
															"nativeSrc": "7538:38:9",
															"nodeType": "YulExpressionStatement",
															"src": "7538:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea",
												"nativeSrc": "7421:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7519:6:9",
														"nodeType": "YulTypedName",
														"src": "7519:6:9",
														"type": ""
													}
												],
												"src": "7421:162:9"
											},
											{
												"body": {
													"nativeSrc": "7735:220:9",
													"nodeType": "YulBlock",
													"src": "7735:220:9",
													"statements": [
														{
															"nativeSrc": "7745:74:9",
															"nodeType": "YulAssignment",
															"src": "7745:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7811:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7811:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7816:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7816:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7752:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7752:58:9"
																},
																"nativeSrc": "7752:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7752:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7745:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7745:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7917:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7917:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea",
																	"nativeSrc": "7828:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7828:88:9"
																},
																"nativeSrc": "7828:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7828:93:9"
															},
															"nativeSrc": "7828:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7828:93:9"
														},
														{
															"nativeSrc": "7930:19:9",
															"nodeType": "YulAssignment",
															"src": "7930:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7941:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7941:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7937:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7937:3:9"
																},
																"nativeSrc": "7937:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7937:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7930:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7930:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7589:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7723:3:9",
														"nodeType": "YulTypedName",
														"src": "7723:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7731:3:9",
														"nodeType": "YulTypedName",
														"src": "7731:3:9",
														"type": ""
													}
												],
												"src": "7589:366:9"
											},
											{
												"body": {
													"nativeSrc": "8132:248:9",
													"nodeType": "YulBlock",
													"src": "8132:248:9",
													"statements": [
														{
															"nativeSrc": "8142:26:9",
															"nodeType": "YulAssignment",
															"src": "8142:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8154:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8154:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8165:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8165:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8150:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8150:3:9"
																},
																"nativeSrc": "8150:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8150:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8142:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8142:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8189:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8189:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8200:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8200:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8185:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8185:3:9"
																		},
																		"nativeSrc": "8185:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8185:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8208:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8208:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8214:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8214:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8204:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8204:3:9"
																		},
																		"nativeSrc": "8204:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8204:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8178:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8178:6:9"
																},
																"nativeSrc": "8178:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8178:47:9"
															},
															"nativeSrc": "8178:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8178:47:9"
														},
														{
															"nativeSrc": "8234:139:9",
															"nodeType": "YulAssignment",
															"src": "8234:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8368:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8368:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8242:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8242:124:9"
																},
																"nativeSrc": "8242:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8242:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8234:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8234:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7961:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8112:9:9",
														"nodeType": "YulTypedName",
														"src": "8112:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8127:4:9",
														"nodeType": "YulTypedName",
														"src": "8127:4:9",
														"type": ""
													}
												],
												"src": "7961:419:9"
											},
											{
												"body": {
													"nativeSrc": "8492:62:9",
													"nodeType": "YulBlock",
													"src": "8492:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8514:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8514:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8522:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8522:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8510:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8510:3:9"
																		},
																		"nativeSrc": "8510:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8510:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207265706179",
																		"kind": "string",
																		"nativeSrc": "8526:20:9",
																		"nodeType": "YulLiteral",
																		"src": "8526:20:9",
																		"type": "",
																		"value": "Insufficient repay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8503:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8503:6:9"
																},
																"nativeSrc": "8503:44:9",
																"nodeType": "YulFunctionCall",
																"src": "8503:44:9"
															},
															"nativeSrc": "8503:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "8503:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847",
												"nativeSrc": "8386:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8484:6:9",
														"nodeType": "YulTypedName",
														"src": "8484:6:9",
														"type": ""
													}
												],
												"src": "8386:168:9"
											},
											{
												"body": {
													"nativeSrc": "8706:220:9",
													"nodeType": "YulBlock",
													"src": "8706:220:9",
													"statements": [
														{
															"nativeSrc": "8716:74:9",
															"nodeType": "YulAssignment",
															"src": "8716:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8782:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8782:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8787:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8723:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8723:58:9"
																},
																"nativeSrc": "8723:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8723:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8716:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8888:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8888:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847",
																	"nativeSrc": "8799:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8799:88:9"
																},
																"nativeSrc": "8799:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8799:93:9"
															},
															"nativeSrc": "8799:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8799:93:9"
														},
														{
															"nativeSrc": "8901:19:9",
															"nodeType": "YulAssignment",
															"src": "8901:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8912:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8912:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8917:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8917:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8908:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8908:3:9"
																},
																"nativeSrc": "8908:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8908:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8901:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8901:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8560:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8694:3:9",
														"nodeType": "YulTypedName",
														"src": "8694:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8702:3:9",
														"nodeType": "YulTypedName",
														"src": "8702:3:9",
														"type": ""
													}
												],
												"src": "8560:366:9"
											},
											{
												"body": {
													"nativeSrc": "9103:248:9",
													"nodeType": "YulBlock",
													"src": "9103:248:9",
													"statements": [
														{
															"nativeSrc": "9113:26:9",
															"nodeType": "YulAssignment",
															"src": "9113:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9125:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9125:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9136:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9121:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9121:3:9"
																},
																"nativeSrc": "9121:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9121:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9113:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9113:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9160:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9160:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9171:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9171:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9156:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:9"
																		},
																		"nativeSrc": "9156:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9156:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9179:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9179:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9185:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9185:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9175:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:9"
																		},
																		"nativeSrc": "9175:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9149:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9149:6:9"
																},
																"nativeSrc": "9149:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9149:47:9"
															},
															"nativeSrc": "9149:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9149:47:9"
														},
														{
															"nativeSrc": "9205:139:9",
															"nodeType": "YulAssignment",
															"src": "9205:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9339:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9339:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9213:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9213:124:9"
																},
																"nativeSrc": "9213:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9213:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9205:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9205:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8932:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9083:9:9",
														"nodeType": "YulTypedName",
														"src": "9083:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9098:4:9",
														"nodeType": "YulTypedName",
														"src": "9098:4:9",
														"type": ""
													}
												],
												"src": "8932:419:9"
											},
											{
												"body": {
													"nativeSrc": "9511:288:9",
													"nodeType": "YulBlock",
													"src": "9511:288:9",
													"statements": [
														{
															"nativeSrc": "9521:26:9",
															"nodeType": "YulAssignment",
															"src": "9521:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9533:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9533:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9544:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9544:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9529:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:9"
																},
																"nativeSrc": "9529:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9529:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9521:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9521:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9601:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9601:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9614:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9614:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9625:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9625:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9610:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:9"
																		},
																		"nativeSrc": "9610:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9610:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9557:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9557:43:9"
																},
																"nativeSrc": "9557:71:9",
																"nodeType": "YulFunctionCall",
																"src": "9557:71:9"
															},
															"nativeSrc": "9557:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "9557:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9682:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9682:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9695:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9695:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9706:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9706:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9691:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9691:3:9"
																		},
																		"nativeSrc": "9691:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9691:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9638:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9638:43:9"
																},
																"nativeSrc": "9638:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9638:72:9"
															},
															"nativeSrc": "9638:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9638:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9764:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9764:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9777:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9777:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9788:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9788:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9773:3:9"
																		},
																		"nativeSrc": "9773:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9773:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9720:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9720:43:9"
																},
																"nativeSrc": "9720:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9720:72:9"
															},
															"nativeSrc": "9720:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9720:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9357:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9467:9:9",
														"nodeType": "YulTypedName",
														"src": "9467:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9479:6:9",
														"nodeType": "YulTypedName",
														"src": "9479:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9487:6:9",
														"nodeType": "YulTypedName",
														"src": "9487:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9495:6:9",
														"nodeType": "YulTypedName",
														"src": "9495:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9506:4:9",
														"nodeType": "YulTypedName",
														"src": "9506:4:9",
														"type": ""
													}
												],
												"src": "9357:442:9"
											},
											{
												"body": {
													"nativeSrc": "9911:62:9",
													"nodeType": "YulBlock",
													"src": "9911:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9933:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9933:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9941:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9941:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9929:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9929:3:9"
																		},
																		"nativeSrc": "9929:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9929:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "9945:20:9",
																		"nodeType": "YulLiteral",
																		"src": "9945:20:9",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9922:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9922:6:9"
																},
																"nativeSrc": "9922:44:9",
																"nodeType": "YulFunctionCall",
																"src": "9922:44:9"
															},
															"nativeSrc": "9922:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "9922:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "9805:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9903:6:9",
														"nodeType": "YulTypedName",
														"src": "9903:6:9",
														"type": ""
													}
												],
												"src": "9805:168:9"
											},
											{
												"body": {
													"nativeSrc": "10125:220:9",
													"nodeType": "YulBlock",
													"src": "10125:220:9",
													"statements": [
														{
															"nativeSrc": "10135:74:9",
															"nodeType": "YulAssignment",
															"src": "10135:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10201:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10201:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10206:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10206:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10142:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10142:58:9"
																},
																"nativeSrc": "10142:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10142:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10135:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10135:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10307:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10307:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "10218:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10218:88:9"
																},
																"nativeSrc": "10218:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10218:93:9"
															},
															"nativeSrc": "10218:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10218:93:9"
														},
														{
															"nativeSrc": "10320:19:9",
															"nodeType": "YulAssignment",
															"src": "10320:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10331:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10331:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10336:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10336:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10327:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10327:3:9"
																},
																"nativeSrc": "10327:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10327:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10320:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10320:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9979:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10113:3:9",
														"nodeType": "YulTypedName",
														"src": "10113:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10121:3:9",
														"nodeType": "YulTypedName",
														"src": "10121:3:9",
														"type": ""
													}
												],
												"src": "9979:366:9"
											},
											{
												"body": {
													"nativeSrc": "10522:248:9",
													"nodeType": "YulBlock",
													"src": "10522:248:9",
													"statements": [
														{
															"nativeSrc": "10532:26:9",
															"nodeType": "YulAssignment",
															"src": "10532:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10544:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10544:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10555:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10555:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10540:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10540:3:9"
																},
																"nativeSrc": "10540:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10540:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10532:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10532:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10579:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10579:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10590:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10590:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10575:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10575:3:9"
																		},
																		"nativeSrc": "10575:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10575:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10598:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10598:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10604:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10604:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10594:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:9"
																		},
																		"nativeSrc": "10594:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10568:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10568:6:9"
																},
																"nativeSrc": "10568:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10568:47:9"
															},
															"nativeSrc": "10568:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10568:47:9"
														},
														{
															"nativeSrc": "10624:139:9",
															"nodeType": "YulAssignment",
															"src": "10624:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10758:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10758:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10632:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10632:124:9"
																},
																"nativeSrc": "10632:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10632:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10624:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10624:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10351:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10502:9:9",
														"nodeType": "YulTypedName",
														"src": "10502:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10517:4:9",
														"nodeType": "YulTypedName",
														"src": "10517:4:9",
														"type": ""
													}
												],
												"src": "10351:419:9"
											},
											{
												"body": {
													"nativeSrc": "10930:288:9",
													"nodeType": "YulBlock",
													"src": "10930:288:9",
													"statements": [
														{
															"nativeSrc": "10940:26:9",
															"nodeType": "YulAssignment",
															"src": "10940:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10952:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10952:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10963:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10963:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10948:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10948:3:9"
																},
																"nativeSrc": "10948:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10948:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10940:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10940:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11020:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11020:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11033:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11033:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11044:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11044:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11029:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11029:3:9"
																		},
																		"nativeSrc": "11029:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11029:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10976:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10976:43:9"
																},
																"nativeSrc": "10976:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10976:71:9"
															},
															"nativeSrc": "10976:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10976:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11101:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11101:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11114:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11114:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11125:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11125:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11110:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:9"
																		},
																		"nativeSrc": "11110:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11110:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11057:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11057:43:9"
																},
																"nativeSrc": "11057:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11057:72:9"
															},
															"nativeSrc": "11057:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11057:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11183:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11183:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11196:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11196:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11207:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11207:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11192:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11192:3:9"
																		},
																		"nativeSrc": "11192:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11139:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11139:43:9"
																},
																"nativeSrc": "11139:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11139:72:9"
															},
															"nativeSrc": "11139:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11139:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10776:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10886:9:9",
														"nodeType": "YulTypedName",
														"src": "10886:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10898:6:9",
														"nodeType": "YulTypedName",
														"src": "10898:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10906:6:9",
														"nodeType": "YulTypedName",
														"src": "10906:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10914:6:9",
														"nodeType": "YulTypedName",
														"src": "10914:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10925:4:9",
														"nodeType": "YulTypedName",
														"src": "10925:4:9",
														"type": ""
													}
												],
												"src": "10776:442:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct LoanManager.Loan -> struct LoanManager.Loan\n    function abi_encode_t_struct$_Loan_$846_memory_ptr_to_t_struct$_Loan_$846_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // borrower\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // repaid\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Loan_$846_memory_ptr__to_t_struct$_Loan_$846_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_Loan_$846_memory_ptr_to_t_struct$_Loan_$846_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already repaid\")\n\n    }\n\n    function abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not borrower\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient repay\")\n\n    }\n\n    function abi_encode_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"835": [
									{
										"length": 32,
										"start": 1028
									},
									{
										"length": 32,
										"start": 1577
									}
								],
								"837": [
									{
										"length": 32,
										"start": 994
									},
									{
										"length": 32,
										"start": 1832
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009c575f3560e01c80639a4e8ecf116100645780639a4e8ecf14610132578063be81c5291461014e578063e1ec3c681461016c578063f2fde38b1461019f578063fbfa77cf146101bb5761009c565b8063504006ca146100a0578063715018a6146100d057806387c51459146100da5780638a700b53146100f85780638da5cb5b14610114575b5f80fd5b6100ba60048036038101906100b59190610a29565b6101d9565b6040516100c79190610b0f565b60405180910390f35b6100d8610286565b005b6100e2610299565b6040516100ef9190610b37565b60405180910390f35b610112600480360381019061010d9190610b50565b61029f565b005b61011c6104a5565b6040516101299190610b9d565b60405180910390f35b61014c60048036038101906101479190610a29565b6104cc565b005b610156610627565b6040516101639190610c11565b60405180910390f35b61018660048036038101906101819190610a29565b61064b565b6040516101969493929190610c39565b60405180910390f35b6101b960048036038101906101b49190610ca6565b6106a2565b005b6101c3610726565b6040516101d09190610b9d565b60405180910390f35b6101e16109b6565b60015f8381526020019081526020015f206040518060800160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015f9054906101000a900460ff1615151515815250509050919050565b61028e61074a565b6102975f6107d1565b565b60025481565b5f60015f8481526020019081526020015f209050806003015f9054906101000a900460ff1615610304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fb90610d2b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038c90610d93565b60405180910390fd5b80600201548210156103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d390610dfb565b60405180910390fd5b610449337f0000000000000000000000000000000000000000000000000000000000000000847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610892909392919063ffffffff16565b6001816003015f6101000a81548160ff0219169083151502179055507f512d3e65b3e58c2187bb1872aa435dba5bd09c1c03823ba56ab70aac411e4a2183338460405161049893929190610e19565b60405180910390a1505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f811161050e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050590610e98565b60405180910390fd5b604051806080016040528060025481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020015f151581525060015f60025481526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050507f8910ba13a55695f056e224bbbc6b65d866b12a8c2fbdf387fb853a1cca298cd7600254338360405161060b93929190610e19565b60405180910390a160025f815480929190600101919050555050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900460ff16905084565b6106aa61074a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361071a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107119190610b9d565b60405180910390fd5b610723816107d1565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610752610914565b73ffffffffffffffffffffffffffffffffffffffff166107706104a5565b73ffffffffffffffffffffffffffffffffffffffff16146107cf57610793610914565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c69190610b9d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61090e848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016108c793929190610eb6565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061091b565b50505050565b5f33905090565b5f8060205f8451602086015f885af18061093a576040513d5f823e3d81fd5b3d92505f519150505f821461095357600181141561096e565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156109b057836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016109a79190610b9d565b60405180910390fd5b50505050565b60405180608001604052805f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581525090565b5f80fd5b5f819050919050565b610a08816109f6565b8114610a12575f80fd5b50565b5f81359050610a23816109ff565b92915050565b5f60208284031215610a3e57610a3d6109f2565b5b5f610a4b84828501610a15565b91505092915050565b610a5d816109f6565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a8c82610a63565b9050919050565b610a9c81610a82565b82525050565b5f8115159050919050565b610ab681610aa2565b82525050565b608082015f820151610ad05f850182610a54565b506020820151610ae36020850182610a93565b506040820151610af66040850182610a54565b506060820151610b096060850182610aad565b50505050565b5f608082019050610b225f830184610abc565b92915050565b610b31816109f6565b82525050565b5f602082019050610b4a5f830184610b28565b92915050565b5f8060408385031215610b6657610b656109f2565b5b5f610b7385828601610a15565b9250506020610b8485828601610a15565b9150509250929050565b610b9781610a82565b82525050565b5f602082019050610bb05f830184610b8e565b92915050565b5f819050919050565b5f610bd9610bd4610bcf84610a63565b610bb6565b610a63565b9050919050565b5f610bea82610bbf565b9050919050565b5f610bfb82610be0565b9050919050565b610c0b81610bf1565b82525050565b5f602082019050610c245f830184610c02565b92915050565b610c3381610aa2565b82525050565b5f608082019050610c4c5f830187610b28565b610c596020830186610b8e565b610c666040830185610b28565b610c736060830184610c2a565b95945050505050565b610c8581610a82565b8114610c8f575f80fd5b50565b5f81359050610ca081610c7c565b92915050565b5f60208284031215610cbb57610cba6109f2565b5b5f610cc884828501610c92565b91505092915050565b5f82825260208201905092915050565b7f416c7265616479207265706169640000000000000000000000000000000000005f82015250565b5f610d15600e83610cd1565b9150610d2082610ce1565b602082019050919050565b5f6020820190508181035f830152610d4281610d09565b9050919050565b7f4e6f7420626f72726f77657200000000000000000000000000000000000000005f82015250565b5f610d7d600c83610cd1565b9150610d8882610d49565b602082019050919050565b5f6020820190508181035f830152610daa81610d71565b9050919050565b7f496e73756666696369656e7420726570617900000000000000000000000000005f82015250565b5f610de5601283610cd1565b9150610df082610db1565b602082019050919050565b5f6020820190508181035f830152610e1281610dd9565b9050919050565b5f606082019050610e2c5f830186610b28565b610e396020830185610b8e565b610e466040830184610b28565b949350505050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f610e82601283610cd1565b9150610e8d82610e4e565b602082019050919050565b5f6020820190508181035f830152610eaf81610e76565b9050919050565b5f606082019050610ec95f830186610b8e565b610ed66020830185610b8e565b610ee36040830184610b28565b94935050505056fea264697066735822122042d4019879604e96ee93b83155f1673f35554b295a97525d9bb273213043c6b064736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9A4E8ECF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9A4E8ECF EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xBE81C529 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x1BB JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x504006CA EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x87C51459 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x8A700B53 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x114 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD8 PUSH2 0x286 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE2 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF SWAP2 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11C PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28E PUSH2 0x74A JUMP JUMPDEST PUSH2 0x297 PUSH0 PUSH2 0x7D1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x304 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FB SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38C SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD DUP3 LT ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D3 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x449 CALLER PUSH32 0x0 DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x892 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x512D3E65B3E58C2187BB1872AA435DBA5BD09C1C03823BA56AB70AAC411E4A21 DUP4 CALLER DUP5 PUSH1 0x40 MLOAD PUSH2 0x498 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP1 PUSH2 0xE98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0x8910BA13A55695F056E224BBBC6B65D866B12A8C2FBDF387FB853A1CCA298CD7 PUSH1 0x2 SLOAD CALLER DUP4 PUSH1 0x40 MLOAD PUSH2 0x60B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x6AA PUSH2 0x74A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x723 DUP2 PUSH2 0x7D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x752 PUSH2 0x914 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x770 PUSH2 0x4A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CF JUMPI PUSH2 0x793 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x90E DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x91B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x953 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x96E JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x9B0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP2 EQ PUSH2 0xA12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA23 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4B DUP5 DUP3 DUP6 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA8C DUP3 PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9C DUP2 PUSH2 0xA82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB6 DUP2 PUSH2 0xAA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0xAD0 PUSH0 DUP6 ADD DUP3 PUSH2 0xA54 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xAE3 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xA93 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xAF6 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xA54 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0xB09 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0xAAD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xB22 PUSH0 DUP4 ADD DUP5 PUSH2 0xABC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB31 DUP2 PUSH2 0x9F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB4A PUSH0 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB66 JUMPI PUSH2 0xB65 PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB73 DUP6 DUP3 DUP7 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB84 DUP6 DUP3 DUP7 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB97 DUP2 PUSH2 0xA82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xB8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBD9 PUSH2 0xBD4 PUSH2 0xBCF DUP5 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xA63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBEA DUP3 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBFB DUP3 PUSH2 0xBE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xBF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC24 PUSH0 DUP4 ADD DUP5 PUSH2 0xC02 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xAA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC4C PUSH0 DUP4 ADD DUP8 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xC59 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xC66 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xC73 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC2A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC85 DUP2 PUSH2 0xA82 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA0 DUP2 PUSH2 0xC7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBB JUMPI PUSH2 0xCBA PUSH2 0x9F2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCC8 DUP5 DUP3 DUP6 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920726570616964000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD15 PUSH1 0xE DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD20 DUP3 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD42 DUP2 PUSH2 0xD09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420626F72726F7765720000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD7D PUSH1 0xC DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xD88 DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDAA DUP2 PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657061790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE5 PUSH1 0x12 DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xDF0 DUP3 PUSH2 0xDB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE12 DUP2 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE2C PUSH0 DUP4 ADD DUP7 PUSH2 0xB28 JUMP JUMPDEST PUSH2 0xE39 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xE46 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE82 PUSH1 0x12 DUP4 PUSH2 0xCD1 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8D DUP3 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEAF DUP2 PUSH2 0xE76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEC9 PUSH0 DUP4 ADD DUP7 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xED6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB8E JUMP JUMPDEST PUSH2 0xEE3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB28 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xD4 ADD SWAP9 PUSH26 0x604E96EE93B83155F1673F35554B295A97525D9BB273213043C6 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "242:1615:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;561:25:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1310:428;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1027:275:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;316:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;517:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;355:30:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1746:108;1802:11;;:::i;:::-;1833:5;:13;1839:6;1833:13;;;;;;;;;;;1826:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:108;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;561:25:8:-;;;;:::o;1310:428::-;1381:15;1399:5;:13;1405:6;1399:13;;;;;;;;;;;1381:31;;1432:2;:9;;;;;;;;;;;;1431:10;1423:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1494:10;1479:25;;:2;:11;;;;;;;;;;;;:25;;;1471:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1550:2;:9;;;1540:6;:19;;1532:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1595:52;1621:10;1633:5;1640:6;1595:8;:25;;;;:52;;;;;;:::i;:::-;1672:4;1660:2;:9;;;:16;;;;;;;;;;;;;;;;;;1692:38;1703:6;1711:10;1723:6;1692:38;;;;;;;;:::i;:::-;;;;;;;;1370:368;1310:428;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1027:275:8:-;1100:1;1091:6;:10;1083:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1155:43;;;;;;;;1160:10;;1155:43;;;;1172:10;1155:43;;;;;;1184:6;1155:43;;;;1192:5;1155:43;;;;;1135:5;:17;1141:10;;1135:17;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:43;1226:10;;1238;1250:6;1214:43;;;;;;;;:::i;:::-;;;;;;;;1280:10;;:12;;;;;;;;;;;;;1027:275;:::o;316:32::-;;;:::o;517:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;355:30:8:-;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8370:720:5:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:108::-;1102:24;1120:5;1102:24;:::i;:::-;1097:3;1090:37;1025:108;;:::o;1139:126::-;1176:7;1216:42;1209:5;1205:54;1194:65;;1139:126;;;:::o;1271:96::-;1308:7;1337:24;1355:5;1337:24;:::i;:::-;1326:35;;1271:96;;;:::o;1373:108::-;1450:24;1468:5;1450:24;:::i;:::-;1445:3;1438:37;1373:108;;:::o;1487:90::-;1521:7;1564:5;1557:13;1550:21;1539:32;;1487:90;;;:::o;1583:99::-;1654:21;1669:5;1654:21;:::i;:::-;1649:3;1642:34;1583:99;;:::o;1746:847::-;1885:4;1880:3;1876:14;1970:4;1963:5;1959:16;1953:23;1989:63;2046:4;2041:3;2037:14;2023:12;1989:63;:::i;:::-;1900:162;2148:4;2141:5;2137:16;2131:23;2167:63;2224:4;2219:3;2215:14;2201:12;2167:63;:::i;:::-;2072:168;2324:4;2317:5;2313:16;2307:23;2343:63;2400:4;2395:3;2391:14;2377:12;2343:63;:::i;:::-;2250:166;2500:4;2493:5;2489:16;2483:23;2519:57;2570:4;2565:3;2561:14;2547:12;2519:57;:::i;:::-;2426:160;1854:739;1746:847;;:::o;2599:307::-;2734:4;2772:3;2761:9;2757:19;2749:27;;2786:113;2896:1;2885:9;2881:17;2872:6;2786:113;:::i;:::-;2599:307;;;;:::o;2912:118::-;2999:24;3017:5;2999:24;:::i;:::-;2994:3;2987:37;2912:118;;:::o;3036:222::-;3129:4;3167:2;3156:9;3152:18;3144:26;;3180:71;3248:1;3237:9;3233:17;3224:6;3180:71;:::i;:::-;3036:222;;;;:::o;3264:474::-;3332:6;3340;3389:2;3377:9;3368:7;3364:23;3360:32;3357:119;;;3395:79;;:::i;:::-;3357:119;3515:1;3540:53;3585:7;3576:6;3565:9;3561:22;3540:53;:::i;:::-;3530:63;;3486:117;3642:2;3668:53;3713:7;3704:6;3693:9;3689:22;3668:53;:::i;:::-;3658:63;;3613:118;3264:474;;;;;:::o;3744:118::-;3831:24;3849:5;3831:24;:::i;:::-;3826:3;3819:37;3744:118;;:::o;3868:222::-;3961:4;3999:2;3988:9;3984:18;3976:26;;4012:71;4080:1;4069:9;4065:17;4056:6;4012:71;:::i;:::-;3868:222;;;;:::o;4096:60::-;4124:3;4145:5;4138:12;;4096:60;;;:::o;4162:142::-;4212:9;4245:53;4263:34;4272:24;4290:5;4272:24;:::i;:::-;4263:34;:::i;:::-;4245:53;:::i;:::-;4232:66;;4162:142;;;:::o;4310:126::-;4360:9;4393:37;4424:5;4393:37;:::i;:::-;4380:50;;4310:126;;;:::o;4442:140::-;4506:9;4539:37;4570:5;4539:37;:::i;:::-;4526:50;;4442:140;;;:::o;4588:159::-;4689:51;4734:5;4689:51;:::i;:::-;4684:3;4677:64;4588:159;;:::o;4753:250::-;4860:4;4898:2;4887:9;4883:18;4875:26;;4911:85;4993:1;4982:9;4978:17;4969:6;4911:85;:::i;:::-;4753:250;;;;:::o;5009:109::-;5090:21;5105:5;5090:21;:::i;:::-;5085:3;5078:34;5009:109;;:::o;5124:541::-;5295:4;5333:3;5322:9;5318:19;5310:27;;5347:71;5415:1;5404:9;5400:17;5391:6;5347:71;:::i;:::-;5428:72;5496:2;5485:9;5481:18;5472:6;5428:72;:::i;:::-;5510;5578:2;5567:9;5563:18;5554:6;5510:72;:::i;:::-;5592:66;5654:2;5643:9;5639:18;5630:6;5592:66;:::i;:::-;5124:541;;;;;;;:::o;5671:122::-;5744:24;5762:5;5744:24;:::i;:::-;5737:5;5734:35;5724:63;;5783:1;5780;5773:12;5724:63;5671:122;:::o;5799:139::-;5845:5;5883:6;5870:20;5861:29;;5899:33;5926:5;5899:33;:::i;:::-;5799:139;;;;:::o;5944:329::-;6003:6;6052:2;6040:9;6031:7;6027:23;6023:32;6020:119;;;6058:79;;:::i;:::-;6020:119;6178:1;6203:53;6248:7;6239:6;6228:9;6224:22;6203:53;:::i;:::-;6193:63;;6149:117;5944:329;;;;:::o;6279:169::-;6363:11;6397:6;6392:3;6385:19;6437:4;6432:3;6428:14;6413:29;;6279:169;;;;:::o;6454:164::-;6594:16;6590:1;6582:6;6578:14;6571:40;6454:164;:::o;6624:366::-;6766:3;6787:67;6851:2;6846:3;6787:67;:::i;:::-;6780:74;;6863:93;6952:3;6863:93;:::i;:::-;6981:2;6976:3;6972:12;6965:19;;6624:366;;;:::o;6996:419::-;7162:4;7200:2;7189:9;7185:18;7177:26;;7249:9;7243:4;7239:20;7235:1;7224:9;7220:17;7213:47;7277:131;7403:4;7277:131;:::i;:::-;7269:139;;6996:419;;;:::o;7421:162::-;7561:14;7557:1;7549:6;7545:14;7538:38;7421:162;:::o;7589:366::-;7731:3;7752:67;7816:2;7811:3;7752:67;:::i;:::-;7745:74;;7828:93;7917:3;7828:93;:::i;:::-;7946:2;7941:3;7937:12;7930:19;;7589:366;;;:::o;7961:419::-;8127:4;8165:2;8154:9;8150:18;8142:26;;8214:9;8208:4;8204:20;8200:1;8189:9;8185:17;8178:47;8242:131;8368:4;8242:131;:::i;:::-;8234:139;;7961:419;;;:::o;8386:168::-;8526:20;8522:1;8514:6;8510:14;8503:44;8386:168;:::o;8560:366::-;8702:3;8723:67;8787:2;8782:3;8723:67;:::i;:::-;8716:74;;8799:93;8888:3;8799:93;:::i;:::-;8917:2;8912:3;8908:12;8901:19;;8560:366;;;:::o;8932:419::-;9098:4;9136:2;9125:9;9121:18;9113:26;;9185:9;9179:4;9175:20;9171:1;9160:9;9156:17;9149:47;9213:131;9339:4;9213:131;:::i;:::-;9205:139;;8932:419;;;:::o;9357:442::-;9506:4;9544:2;9533:9;9529:18;9521:26;;9557:71;9625:1;9614:9;9610:17;9601:6;9557:71;:::i;:::-;9638:72;9706:2;9695:9;9691:18;9682:6;9638:72;:::i;:::-;9720;9788:2;9777:9;9773:18;9764:6;9720:72;:::i;:::-;9357:442;;;;;;:::o;9805:168::-;9945:20;9941:1;9933:6;9929:14;9922:44;9805:168;:::o;9979:366::-;10121:3;10142:67;10206:2;10201:3;10142:67;:::i;:::-;10135:74;;10218:93;10307:3;10218:93;:::i;:::-;10336:2;10331:3;10327:12;10320:19;;9979:366;;;:::o;10351:419::-;10517:4;10555:2;10544:9;10540:18;10532:26;;10604:9;10598:4;10594:20;10590:1;10579:9;10575:17;10568:47;10632:131;10758:4;10632:131;:::i;:::-;10624:139;;10351:419;;;:::o;10776:442::-;10925:4;10963:2;10952:9;10948:18;10940:26;;10976:71;11044:1;11033:9;11029:17;11020:6;10976:71;:::i;:::-;11057:72;11125:2;11114:9;11110:18;11101:6;11057:72;:::i;:::-;11139;11207:2;11196:9;11192:18;11183:6;11139:72;:::i;:::-;10776:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "774600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bhcToken()": "infinite",
								"createLoan(uint256)": "infinite",
								"getLoan(uint256)": "infinite",
								"loans(uint256)": "infinite",
								"nextLoanId()": "2470",
								"owner()": "2604",
								"renounceOwnership()": "infinite",
								"repayLoan(uint256,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vault()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "C0"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 736,
									"end": 1019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 800,
									"end": 810,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 855,
									"end": 856,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 831,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 857,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 831,
									"end": 843,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 831,
									"end": 857,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 831,
									"end": 857,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 831,
									"end": 857,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 823,
									"end": 875,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 823,
									"end": 875,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 918,
									"end": 919,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 894,
									"end": 920,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 894,
									"end": 920,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 894,
									"end": 906,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 894,
									"end": 920,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 894,
									"end": 920,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 894,
									"end": 920,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 886,
									"end": 938,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 886,
									"end": 938,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 967,
									"end": 979,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 949,
									"end": 980,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1011,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1011,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 736,
									"end": 1019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1794,
									"end": 1805,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1834,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1823,
									"end": 1826,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1816,
									"end": 1835,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1859,
									"end": 1873,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 2048,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1885,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2025,
									"end": 2040,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C696420746F6B656E00000000000000000000000000000000000000"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2019,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2002,
									"end": 2041,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 2048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1885,
									"end": 2048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2420,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2054,
									"end": 2420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2199,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2217,
									"end": 2284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2281,
									"end": 2283,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 2276,
									"end": 2279,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 2217,
									"end": 2284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2284,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2217,
									"end": 2284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2210,
									"end": 2284,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2210,
									"end": 2284,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2386,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2382,
									"end": 2385,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2386,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 2293,
									"end": 2386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2386,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2293,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2411,
									"end": 2413,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2406,
									"end": 2409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2402,
									"end": 2414,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2395,
									"end": 2414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2420,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2420,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2845,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2592,
									"end": 2596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2630,
									"end": 2632,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2619,
									"end": 2628,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2615,
									"end": 2633,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2607,
									"end": 2633,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2607,
									"end": 2633,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2679,
									"end": 2688,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2673,
									"end": 2677,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2669,
									"end": 2689,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2665,
									"end": 2666,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2654,
									"end": 2663,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2650,
									"end": 2667,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2690,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2707,
									"end": 2838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2833,
									"end": 2837,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2707,
									"end": 2838,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 2707,
									"end": 2838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2707,
									"end": 2838,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2707,
									"end": 2838,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2699,
									"end": 2838,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2699,
									"end": 2838,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2845,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2845,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2845,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 3014,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 2851,
									"end": 3014,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2991,
									"end": 3006,
									"name": "PUSH",
									"source": 9,
									"value": "496E76616C6964207661756C7400000000000000000000000000000000000000"
								},
								{
									"begin": 2987,
									"end": 2988,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2979,
									"end": 2985,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2975,
									"end": 2989,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2968,
									"end": 3007,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 3014,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 3014,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3386,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3020,
									"end": 3386,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3165,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3183,
									"end": 3250,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3247,
									"end": 3249,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 3242,
									"end": 3245,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3250,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 3183,
									"end": 3250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3250,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3183,
									"end": 3250,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3176,
									"end": 3250,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3176,
									"end": 3250,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3352,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3348,
									"end": 3351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3352,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 3259,
									"end": 3352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3259,
									"end": 3352,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3259,
									"end": 3352,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3377,
									"end": 3379,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3372,
									"end": 3375,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3368,
									"end": 3380,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3380,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3380,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3386,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3386,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3386,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3020,
									"end": 3386,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3811,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 3392,
									"end": 3811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3596,
									"end": 3598,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3585,
									"end": 3594,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3581,
									"end": 3599,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3573,
									"end": 3599,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3573,
									"end": 3599,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3645,
									"end": 3654,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3635,
									"end": 3655,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3631,
									"end": 3632,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3620,
									"end": 3629,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3633,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3656,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3673,
									"end": 3804,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3799,
									"end": 3803,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3673,
									"end": 3804,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 3673,
									"end": 3804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3673,
									"end": 3804,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 3673,
									"end": 3804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3665,
									"end": 3804,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3665,
									"end": 3804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3811,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3811,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3811,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3392,
									"end": 3811,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "837"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "835"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 1857,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042d4019879604e96ee93b83155f1673f35554b295a97525d9bb273213043c6b064736f6c63430008150033",
									".code": [
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "9A4E8ECF"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "9A4E8ECF"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "BE81C529"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "E1EC3C68"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "FBFA77CF"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "504006CA"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "87C51459"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "8A700B53"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 242,
											"end": 1857,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1746,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1746,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1746,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 586,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 561,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 561,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1310,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1310,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1027,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1027,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 316,
											"end": 348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 517,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 517,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 517,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 355,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 355,
											"end": 385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1802,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1802,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1802,
											"end": 1813,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1802,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1838,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1846,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1826,
											"end": 1846,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1746,
											"end": 1854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 561,
											"end": 586,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 561,
											"end": 586,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 561,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1404,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1412,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1412,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1412,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1441,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1423,
											"end": 1460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 1423,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1504,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1490,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1504,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1471,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1552,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1559,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1532,
											"end": 1582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1532,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1621,
											"end": 1631,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1633,
											"end": 1638,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "837"
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1603,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "835"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1595,
											"end": 1620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1595,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "PUSH",
											"source": 8,
											"value": "512D3E65B3E58C2187BB1872AA435DBA5BD09C1C03823BA56AB70AAC411E4A21"
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1721,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1723,
											"end": 1729,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1692,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1692,
											"end": 1730,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1083,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1172,
											"end": 1182,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1141,
											"end": 1151,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1152,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1135,
											"end": 1198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "PUSH",
											"source": 8,
											"value": "8910BA13A55695F056E224BBBC6B65D866B12A8C2FBDF387FB853A1CCA298CD7"
										},
										{
											"begin": 1226,
											"end": 1236,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1226,
											"end": 1236,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1248,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1214,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1214,
											"end": 1257,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1280,
											"end": 1290,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "835"
										},
										{
											"begin": 316,
											"end": 348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 316,
											"end": 348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 517,
											"end": 554,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 517,
											"end": 554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 385,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "837"
										},
										{
											"begin": 355,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 355,
											"end": 385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1102,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1258,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1259,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1139,
											"end": 1265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1355,
											"end": 1360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1337,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1271,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1468,
											"end": 1473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1450,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1475,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1373,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1570,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1550,
											"end": 1571,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1682,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1583,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1654,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1675,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1654,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1649,
											"end": 1652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2593,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1746,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1885,
											"end": 1889,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1880,
											"end": 1883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1970,
											"end": 1974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1976,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2044,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2037,
											"end": 2051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1989,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 2052,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1989,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2148,
											"end": 2152,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2224,
											"end": 2228,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2167,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2330,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2398,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2391,
											"end": 2405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2377,
											"end": 2389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 2343,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2343,
											"end": 2406,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2343,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2504,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2505,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2570,
											"end": 2574,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2565,
											"end": 2568,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 2519,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2576,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2519,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 2593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1746,
											"end": 2593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2599,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2734,
											"end": 2738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2775,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2757,
											"end": 2776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2896,
											"end": 2897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2894,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2786,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2899,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 2786,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3030,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 2912,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3017,
											"end": 3022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2999,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3023,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 2999,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2994,
											"end": 2997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3024,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3258,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3036,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3250,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 3180,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3251,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3180,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3258,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3258,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3377,
											"end": 3386,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3368,
											"end": 3375,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3387,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3360,
											"end": 3392,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 3395,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3395,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3357,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3574,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3540,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3713,
											"end": 3720,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3702,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3689,
											"end": 3711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3668,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3668,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3668,
											"end": 3721,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3668,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3613,
											"end": 3731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3264,
											"end": 3738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3831,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3855,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3831,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3826,
											"end": 3829,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3856,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3744,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 4090,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3868,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4065,
											"end": 4082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4012,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 4083,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4012,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 4090,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 4090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 4090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 4090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4096,
											"end": 4156,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4096,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4124,
											"end": 4127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4150,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4096,
											"end": 4156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4096,
											"end": 4156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4096,
											"end": 4156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4096,
											"end": 4156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4304,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4162,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4245,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4263,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4272,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4290,
											"end": 4295,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4272,
											"end": 4296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4272,
											"end": 4296,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4272,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4263,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4297,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4263,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 4245,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4298,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4245,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4436,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 4310,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4393,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4393,
											"end": 4430,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4393,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4436,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4310,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4570,
											"end": 4575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4539,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 4539,
											"end": 4576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4539,
											"end": 4576,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4539,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4747,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4588,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4689,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4734,
											"end": 4739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4689,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4689,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4689,
											"end": 4740,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4689,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4677,
											"end": 4741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 5003,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4860,
											"end": 4864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4875,
											"end": 4901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4875,
											"end": 4901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4993,
											"end": 4994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 4991,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4978,
											"end": 4995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4911,
											"end": 4996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4996,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4911,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 5003,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 5003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 5003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 5003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5105,
											"end": 5110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 5090,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5090,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5085,
											"end": 5088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5112,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5295,
											"end": 5299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5336,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 5322,
											"end": 5331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5337,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5337,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5347,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5347,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5347,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5347,
											"end": 5418,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5347,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5496,
											"end": 5498,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5428,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5428,
											"end": 5500,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5428,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5567,
											"end": 5576,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5563,
											"end": 5581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5560,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 5510,
											"end": 5582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5510,
											"end": 5582,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 5510,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 5654,
											"end": 5656,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5643,
											"end": 5652,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5639,
											"end": 5657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5636,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5592,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 5592,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5793,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5671,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5744,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 5762,
											"end": 5767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5744,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 5744,
											"end": 5768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5744,
											"end": 5768,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 5744,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5769,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5724,
											"end": 5787,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5783,
											"end": 5784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5773,
											"end": 5785,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5787,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5724,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5938,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5799,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5870,
											"end": 5890,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5890,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5890,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5926,
											"end": 5931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5899,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5899,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5938,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5938,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5938,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5799,
											"end": 5938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6273,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5944,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6054,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6027,
											"end": 6050,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6023,
											"end": 6055,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 6058,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 6058,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6020,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6248,
											"end": 6255,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6245,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6224,
											"end": 6246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6203,
											"end": 6256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6203,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6149,
											"end": 6266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6273,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 6273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6448,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 6279,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6363,
											"end": 6374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6385,
											"end": 6404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6435,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6428,
											"end": 6442,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6442,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6448,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6279,
											"end": 6448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6454,
											"end": 6618,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6454,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6594,
											"end": 6610,
											"name": "PUSH",
											"source": 9,
											"value": "416C726561647920726570616964000000000000000000000000000000000000"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6611,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6454,
											"end": 6618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6454,
											"end": 6618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 6851,
											"end": 6853,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 6846,
											"end": 6849,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 6787,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 6787,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6854,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6780,
											"end": 6854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 6952,
											"end": 6955,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 6863,
											"end": 6956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 6863,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 6984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6965,
											"end": 6984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6624,
											"end": 6990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7415,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 6996,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7162,
											"end": 7166,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7202,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7189,
											"end": 7198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7258,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7239,
											"end": 7259,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7220,
											"end": 7237,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7260,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 7277,
											"end": 7408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7408,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7277,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7408,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7408,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7415,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7583,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 7421,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7575,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F7420626F72726F7765720000000000000000000000000000000000000000"
										},
										{
											"begin": 7557,
											"end": 7558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7955,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 7589,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7731,
											"end": 7734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7816,
											"end": 7818,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7811,
											"end": 7814,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 7752,
											"end": 7819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7752,
											"end": 7819,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7752,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7819,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7745,
											"end": 7819,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7828,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 7917,
											"end": 7920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7828,
											"end": 7921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 7828,
											"end": 7921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7828,
											"end": 7921,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 7828,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7941,
											"end": 7944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7937,
											"end": 7949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7955,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7589,
											"end": 7955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8380,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7961,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8167,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8150,
											"end": 8168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8142,
											"end": 8168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8142,
											"end": 8168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8214,
											"end": 8223,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8208,
											"end": 8212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8204,
											"end": 8224,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8200,
											"end": 8201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8198,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 8368,
											"end": 8372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 8242,
											"end": 8373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8242,
											"end": 8373,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 8242,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8380,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8380,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 8380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8554,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 8386,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8526,
											"end": 8546,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742072657061790000000000000000000000000000"
										},
										{
											"begin": 8522,
											"end": 8523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8520,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8510,
											"end": 8524,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8503,
											"end": 8547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8926,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 8560,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8702,
											"end": 8705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8782,
											"end": 8785,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 8723,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8790,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8723,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8790,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8799,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8888,
											"end": 8891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8799,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 8799,
											"end": 8892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8799,
											"end": 8892,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8799,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8917,
											"end": 8919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8912,
											"end": 8915,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 8920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8901,
											"end": 8920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8926,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8926,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8926,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9098,
											"end": 9102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9136,
											"end": 9138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9125,
											"end": 9134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9171,
											"end": 9172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9169,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9149,
											"end": 9196,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 9339,
											"end": 9343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 9213,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 9213,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9344,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8932,
											"end": 9351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9506,
											"end": 9510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9546,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9533,
											"end": 9542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9521,
											"end": 9547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9614,
											"end": 9623,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9601,
											"end": 9607,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9557,
											"end": 9628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9628,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9557,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9706,
											"end": 9708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9695,
											"end": 9704,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9682,
											"end": 9688,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 9638,
											"end": 9710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9710,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9638,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9777,
											"end": 9786,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9773,
											"end": 9791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9770,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 9720,
											"end": 9792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9720,
											"end": 9792,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 9720,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9357,
											"end": 9799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 9965,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 9941,
											"end": 9942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9929,
											"end": 9943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9922,
											"end": 9966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10121,
											"end": 10124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 10201,
											"end": 10204,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10142,
											"end": 10209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 10142,
											"end": 10209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10135,
											"end": 10209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10307,
											"end": 10310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 10218,
											"end": 10311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10218,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10336,
											"end": 10338,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10331,
											"end": 10334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10517,
											"end": 10521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10557,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10540,
											"end": 10558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10532,
											"end": 10558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10604,
											"end": 10613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10598,
											"end": 10602,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10594,
											"end": 10614,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10575,
											"end": 10592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10568,
											"end": 10615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 10758,
											"end": 10762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 10632,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 10632,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10351,
											"end": 10770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10965,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10952,
											"end": 10961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 10966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10940,
											"end": 10966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10940,
											"end": 10966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 11044,
											"end": 11045,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11033,
											"end": 11042,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11029,
											"end": 11046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11026,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 10976,
											"end": 11047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 10976,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 11125,
											"end": 11127,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11114,
											"end": 11123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11110,
											"end": 11128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11101,
											"end": 11107,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 11057,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 11057,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11207,
											"end": 11209,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11183,
											"end": 11189,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 11139,
											"end": 11211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 11139,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10776,
											"end": 11218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LoanManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"bhcToken()": "be81c529",
							"createLoan(uint256)": "9a4e8ecf",
							"getLoan(uint256)": "504006ca",
							"loans(uint256)": "e1ec3c68",
							"nextLoanId()": "87c51459",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"repayLoan(uint256,uint256)": "8a700b53",
							"transferOwnership(address)": "f2fde38b",
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bhcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"repaid\",\"type\":\"bool\"}],\"internalType\":\"struct LoanManager.Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"repaid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextLoanId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LoanManager.sol\":\"LoanManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/LoanManager.sol\":{\"keccak256\":\"0xe24cb223ea3bf4934c51bc37db6bffe56c04ca95b97685c2ef0c119c4c518848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4211daafda5c60083a35f2c5097396f6de7af0ba0b43e1bfb0c2b32917225b16\",\"dweb:/ipfs/QmdN4aV2NohzdK6ZZ3yfnZcwbjaZaFM5PyLp27Nxy237fF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/LoanManager.sol:LoanManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 851,
								"contract": "contracts/LoanManager.sol:LoanManager",
								"label": "loans",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Loan)846_storage)"
							},
							{
								"astId": 853,
								"contract": "contracts/LoanManager.sol:LoanManager",
								"label": "nextLoanId",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_uint256,t_struct(Loan)846_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LoanManager.Loan)",
								"numberOfBytes": "32",
								"value": "t_struct(Loan)846_storage"
							},
							"t_struct(Loan)846_storage": {
								"encoding": "inplace",
								"label": "struct LoanManager.Loan",
								"members": [
									{
										"astId": 839,
										"contract": "contracts/LoanManager.sol:LoanManager",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 841,
										"contract": "contracts/LoanManager.sol:LoanManager",
										"label": "borrower",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 843,
										"contract": "contracts/LoanManager.sol:LoanManager",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 845,
										"contract": "contracts/LoanManager.sol:LoanManager",
										"label": "repaid",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 810,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 809,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 809,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								809
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							821
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 821,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								821,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 822,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 821,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "215:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "397:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "406:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "428:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:4"
									},
									"src": "391:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "628:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "637:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "660:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "685:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:4"
									},
									"src": "622:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "822:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:4"
									},
									"scope": 315,
									"src": "776:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "972:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:4"
									},
									"scope": 315,
									"src": "913:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1223:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1235:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1268:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:4"
									},
									"scope": 315,
									"src": "1205:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1568:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1583:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:4"
									},
									"scope": 315,
									"src": "1549:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2327:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2344:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2377:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:4"
									},
									"scope": 315,
									"src": "2310:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2713:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2772:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:4"
									},
									"scope": 315,
									"src": "2691:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "205:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2675:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							779
						]
					},
					"id": 780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 780,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 779,
							"linearizedBaseContracts": [
								779
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 327,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 336,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 348,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 351,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 353,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 342,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 354,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 355,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 349,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 347,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 338,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 779,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 377,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 379,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 380,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 381,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 375,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 373,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 779,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 404,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 406,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 407,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 408,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 400,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 411,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 390,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 389,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 779,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 432,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 434,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 419,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 435,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 437,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 430,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 428,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 440,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 415,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 779,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 472,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 453,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$779",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 455,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 466,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 467,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 468,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 445,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 444,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 779,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 514,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															485
														],
														"declarations": [
															{
																"constant": false,
																"id": 485,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 514,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 484,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 494,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 490,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$779",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 488,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 492,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 486,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 496,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 505,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 504,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 499,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 500,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 501,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 498,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 503,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 508,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 479,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 509,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 510,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 506,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 513,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 475,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 779,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 527,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 531,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 533,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 534,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 535,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 529,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 540,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 538,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 547,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 520,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 549,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 522,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 550,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 545,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 543,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 557,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 555,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 519,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 518,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 315,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 779,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 576,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 590,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 592,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 588,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 603,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 602,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 598,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 567,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 597,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 596,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 595,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 601,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 583,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 571,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 581,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 586,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 565,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 779,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 621,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 614,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 636,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 637,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 638,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 639,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 650,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 649,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 645,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 643,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 642,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 648,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 651,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 633,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 627,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 628,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 629,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 630,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 632,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 779,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 666,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 659,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 682,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 692,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 688,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 657,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 686,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 685,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																			"typeString": "function (address) pure"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 691,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 673,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 674,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 671,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 676,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 656,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 655,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 662,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 779,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 707,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 736,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 706,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 700,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 712,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 723,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 717,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 715,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 730,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 728,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 727,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 733,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 699,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 698,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 779,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 748,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 754,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 756,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 752,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 755,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 741,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 757,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 759,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 752,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 770,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 764,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 741,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 763,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 762,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 774,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 315,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 742,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 779,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 780,
							"src": "698:9376:5",
							"usedErrors": [
								327,
								336
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							809
						]
					},
					"id": 810,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 787,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 786,
												"id": 789,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 809,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 795,
												"id": 798,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 809,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 804,
												"id": 806,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 809,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 810,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							821
						]
					},
					"id": 822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 811,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 812,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 821,
							"linearizedBaseContracts": [
								821
							],
							"name": "IERC165",
							"nameLocation": "433:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "819:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 814,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:7"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "862:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:7"
									},
									"scope": 821,
									"src": "792:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 822,
							"src": "423:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:7"
				},
				"id": 7
			},
			"contracts/LoanManager.sol": {
				"ast": {
					"absolutePath": "contracts/LoanManager.sol",
					"exportedSymbols": {
						"Context": [
							809
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"LoanManager": [
							1022
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							779
						]
					},
					"id": 1023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 148,
							"src": "61:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 780,
							"src": "115:65:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 316,
							"src": "182:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 827,
										"name": "Ownable",
										"nameLocations": [
											"266:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "266:7:8"
									},
									"id": 828,
									"nodeType": "InheritanceSpecifier",
									"src": "266:7:8"
								}
							],
							"canonicalName": "LoanManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1022,
							"linearizedBaseContracts": [
								1022,
								147,
								809
							],
							"name": "LoanManager",
							"nameLocation": "251:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 832,
									"libraryName": {
										"id": 829,
										"name": "SafeERC20",
										"nameLocations": [
											"287:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 779,
										"src": "287:9:8"
									},
									"nodeType": "UsingForDirective",
									"src": "281:27:8",
									"typeName": {
										"id": 831,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 830,
											"name": "IERC20",
											"nameLocations": [
												"301:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "301:6:8"
										},
										"referencedDeclaration": 315,
										"src": "301:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "be81c529",
									"id": 835,
									"mutability": "immutable",
									"name": "bhcToken",
									"nameLocation": "340:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "316:32:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IERC20",
											"nameLocations": [
												"316:6:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "316:6:8"
										},
										"referencedDeclaration": 315,
										"src": "316:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 837,
									"mutability": "immutable",
									"name": "vault",
									"nameLocation": "380:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "355:30:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 836,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "355:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LoanManager.Loan",
									"id": 846,
									"members": [
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "425:2:8",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "417:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 838,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "417:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "borrower",
											"nameLocation": "446:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "438:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 840,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "438:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "473:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "465:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "465:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "repaid",
											"nameLocation": "495:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "490:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 844,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "490:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Loan",
									"nameLocation": "401:4:8",
									"nodeType": "StructDefinition",
									"scope": 1022,
									"src": "394:115:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ec3c68",
									"id": 851,
									"mutability": "mutable",
									"name": "loans",
									"nameLocation": "549:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "517:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$846_storage_$",
										"typeString": "mapping(uint256 => struct LoanManager.Loan)"
									},
									"typeName": {
										"id": 850,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 847,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "525:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "517:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$846_storage_$",
											"typeString": "mapping(uint256 => struct LoanManager.Loan)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 849,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 848,
												"name": "Loan",
												"nameLocations": [
													"536:4:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 846,
												"src": "536:4:8"
											},
											"referencedDeclaration": 846,
											"src": "536:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
												"typeString": "struct LoanManager.Loan"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "87c51459",
									"id": 853,
									"mutability": "mutable",
									"name": "nextLoanId",
									"nameLocation": "576:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "561:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 852,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "561:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8910ba13a55695f056e224bbbc6b65d866b12a8c2fbdf387fb853a1cca298cd7",
									"id": 861,
									"name": "LoanCreated",
									"nameLocation": "601:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "621:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "613:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "633:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "625:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "651:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "643:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:46:8"
									},
									"src": "595:64:8"
								},
								{
									"anonymous": false,
									"eventSelector": "512d3e65b3e58c2187bb1872aa435dba5bd09c1c03823ba56ab70aac411e4a21",
									"id": 869,
									"name": "LoanRepaid",
									"nameLocation": "671:10:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "690:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "682:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"indexed": false,
												"mutability": "mutable",
												"name": "borrower",
												"nameLocation": "702:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "694:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "720:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "712:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:46:8"
									},
									"src": "665:63:8"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "812:207:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 881,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "831:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "855:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "847:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 882,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "847:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "847:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "831:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "859:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																"typeString": "literal_string \"Invalid token\""
															},
															"value": "Invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
																"typeString": "literal_string \"Invalid token\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "823:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "823:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 891,
																"name": "vaultAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "894:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "918:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "910:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 892,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "910:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "910:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "894:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207661756c74",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "922:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6",
																"typeString": "literal_string \"Invalid vault\""
															},
															"value": "Invalid vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_239e0da3aa825c4230322d3c2a8248068cf6b5e2d6cddbcd13452215ffe717c6",
																"typeString": "literal_string \"Invalid vault\""
															}
														],
														"id": 890,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "886:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "886:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "886:52:8"
											},
											{
												"expression": {
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 900,
														"name": "bhcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "949:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 902,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "967:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 901,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "960:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "960:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "949:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "949:31:8"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "vault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "991:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "999:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "991:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "991:20:8"
											}
										]
									},
									"id": 911,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 876,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "800:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "804:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "800:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 878,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 875,
												"name": "Ownable",
												"nameLocations": [
													"792:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "792:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "792:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "756:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "748:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "vaultAddress",
												"nameLocation": "778:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "770:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:44:8"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "812:0:8"
									},
									"scope": 1022,
									"src": "736:283:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "1072:230:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 917,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "1091:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1100:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1091:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1103:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1083:41:8"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 923,
															"name": "loans",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "1135:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$846_storage_$",
																"typeString": "mapping(uint256 => struct LoanManager.Loan storage ref)"
															}
														},
														"id": 925,
														"indexExpression": {
															"id": 924,
															"name": "nextLoanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1141:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1135:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$846_storage",
															"typeString": "struct LoanManager.Loan storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 927,
																"name": "nextLoanId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1160:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 928,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1172:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1176:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1172:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 930,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "1184:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1192:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 926,
															"name": "Loan",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "1155:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Loan_$846_storage_ptr_$",
																"typeString": "type(struct LoanManager.Loan storage pointer)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1155:43:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$846_memory_ptr",
															"typeString": "struct LoanManager.Loan memory"
														}
													},
													"src": "1135:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$846_storage",
														"typeString": "struct LoanManager.Loan storage ref"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "1135:63:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 936,
															"name": "nextLoanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1226:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 937,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1238:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1242:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1238:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 939,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "1250:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "LoanCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "1214:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "EmitStatement",
												"src": "1209:48:8"
											},
											{
												"id": 945,
												"nodeType": "UncheckedBlock",
												"src": "1268:27:8",
												"statements": [
													{
														"expression": {
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1280:12:8",
															"subExpression": {
																"id": 942,
																"name": "nextLoanId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1280:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 944,
														"nodeType": "ExpressionStatement",
														"src": "1280:12:8"
													}
												]
											}
										]
									},
									"functionSelector": "9a4e8ecf",
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createLoan",
									"nameLocation": "1036:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1055:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "1047:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:16:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1072:0:8"
									},
									"scope": 1022,
									"src": "1027:275:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "1370:368:8",
										"statements": [
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "ln",
														"nameLocation": "1394:2:8",
														"nodeType": "VariableDeclaration",
														"scope": 1007,
														"src": "1381:15:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
															"typeString": "struct LoanManager.Loan"
														},
														"typeName": {
															"id": 955,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 954,
																"name": "Loan",
																"nameLocations": [
																	"1381:4:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 846,
																"src": "1381:4:8"
															},
															"referencedDeclaration": 846,
															"src": "1381:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
																"typeString": "struct LoanManager.Loan"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"baseExpression": {
														"id": 957,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1399:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$846_storage_$",
															"typeString": "mapping(uint256 => struct LoanManager.Loan storage ref)"
														}
													},
													"id": 959,
													"indexExpression": {
														"id": 958,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1405:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1399:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$846_storage",
														"typeString": "struct LoanManager.Loan storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1381:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1431:10:8",
															"subExpression": {
																"expression": {
																	"id": 962,
																	"name": "ln",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1432:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
																		"typeString": "struct LoanManager.Loan storage pointer"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1435:6:8",
																"memberName": "repaid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 845,
																"src": "1432:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920726570616964",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1443:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46",
																"typeString": "literal_string \"Already repaid\""
															},
															"value": "Already repaid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5ece5ace778fd61eeacf62354aa9f048d40c4d9fb74a45da09354f6d9859b46",
																"typeString": "literal_string \"Already repaid\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1423:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1423:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "1423:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 969,
																	"name": "ln",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1479:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
																		"typeString": "struct LoanManager.Loan storage pointer"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1482:8:8",
																"memberName": "borrower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 841,
																"src": "1479:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 971,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1494:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1498:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1494:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1479:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420626f72726f776572",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea",
																"typeString": "literal_string \"Not borrower\""
															},
															"value": "Not borrower"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cf3cef7662627b1f4ed2ebe4c09e5bf4ccb53edeb8a19e85ac0fb17961a90dea",
																"typeString": "literal_string \"Not borrower\""
															}
														],
														"id": 968,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1471:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "1471:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 978,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "1540:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 979,
																	"name": "ln",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1550:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
																		"typeString": "struct LoanManager.Loan storage pointer"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1553:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "1550:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1540:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207265706179",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1561:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847",
																"typeString": "literal_string \"Insufficient repay\""
															},
															"value": "Insufficient repay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8ef6e30f8966699ab9f3a444e1c070e8e9072eb6bb4fdfb00d4d9a1dae3c847",
																"typeString": "literal_string \"Insufficient repay\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1532:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1532:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1532:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 988,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1621:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1625:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1621:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "1633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "1640:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 985,
															"name": "bhcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "1595:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1604:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 387,
														"src": "1595:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1595:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "1595:52:8"
											},
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 994,
															"name": "ln",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1660:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
																"typeString": "struct LoanManager.Loan storage pointer"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1663:6:8",
														"memberName": "repaid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "1660:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1672:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1660:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1660:16:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1001,
															"name": "loanId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1703:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1002,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1711:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1715:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1711:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "1723:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "LoanRepaid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "1692:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1692:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "EmitStatement",
												"src": "1687:43:8"
											}
										]
									},
									"functionSelector": "8a700b53",
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "repayLoan",
									"nameLocation": "1319:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1337:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1329:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1353:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "1345:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:32:8"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1370:0:8"
									},
									"scope": 1022,
									"src": "1310:428:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "1815:39:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1016,
														"name": "loans",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1833:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$846_storage_$",
															"typeString": "mapping(uint256 => struct LoanManager.Loan storage ref)"
														}
													},
													"id": 1018,
													"indexExpression": {
														"id": 1017,
														"name": "loanId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "1839:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1833:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$846_storage",
														"typeString": "struct LoanManager.Loan storage ref"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1019,
												"nodeType": "Return",
												"src": "1826:20:8"
											}
										]
									},
									"functionSelector": "504006ca",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLoan",
									"nameLocation": "1755:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "loanId",
												"nameLocation": "1771:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1763:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:16:8"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1802:11:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Loan_$846_memory_ptr",
													"typeString": "struct LoanManager.Loan"
												},
												"typeName": {
													"id": 1013,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1012,
														"name": "Loan",
														"nameLocations": [
															"1802:4:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 846,
														"src": "1802:4:8"
													},
													"referencedDeclaration": 846,
													"src": "1802:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Loan_$846_storage_ptr",
														"typeString": "struct LoanManager.Loan"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1801:13:8"
									},
									"scope": 1022,
									"src": "1746:108:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1023,
							"src": "242:1615:8",
							"usedErrors": [
								13,
								18,
								327
							],
							"usedEvents": [
								24,
								861,
								869
							]
						}
					],
					"src": "33:1826:8"
				},
				"id": 8
			}
		}
	}
}